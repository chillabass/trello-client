[{"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/ProfileInfo.tsx":"1","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/CreateButton.tsx":"2","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/LoadAvatar.tsx":"3","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/userActions.ts":"4","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/Desk.tsx":"5","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/ProfileDesks.tsx":"6","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/deskActions.ts":"7","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/Header.tsx":"8","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/Column.tsx":"9","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/index.tsx":"10","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/reportWebVitals.ts":"11","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/App.tsx":"12","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/store.ts":"13","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/SignIn.tsx":"14","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/SignUp.tsx":"15","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/Main.tsx":"16","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/NotFound.tsx":"17","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/Profile.tsx":"18","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/hoc/PrivateRouter.tsx":"19","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/hooks.ts":"20","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/BoardHeader.tsx":"21","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/CreatingForm.tsx":"22","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/FormItem.tsx":"23","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/config/index.ts":"24","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/Task.tsx":"25","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/EditProfileForm.tsx":"26","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/CreateItem.tsx":"27","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/columnActions.ts":"28","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/taskAction.ts":"29","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/TaskEditForm.tsx":"30","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/columnSlicer.ts":"31","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/userSlicer.ts":"32","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/taskSlicer.ts":"33","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/deskSlicer.ts":"34","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/ColumnEditForm.tsx":"35","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/DeskEditForm.tsx":"36"},{"size":3614,"mtime":1648557130478,"results":"37","hashOfConfig":"38"},{"size":851,"mtime":1648480731382,"results":"39","hashOfConfig":"38"},{"size":1458,"mtime":1648119103440,"results":"40","hashOfConfig":"38"},{"size":4725,"mtime":1648557134858,"results":"41","hashOfConfig":"38"},{"size":2539,"mtime":1648563558264,"results":"42","hashOfConfig":"38"},{"size":1481,"mtime":1648565292327,"results":"43","hashOfConfig":"38"},{"size":2763,"mtime":1648567279600,"results":"44","hashOfConfig":"38"},{"size":1820,"mtime":1648557128610,"results":"45","hashOfConfig":"38"},{"size":3232,"mtime":1648561427744,"results":"46","hashOfConfig":"38"},{"size":473,"mtime":1648106947252,"results":"47","hashOfConfig":"38"},{"size":425,"mtime":1648106947252,"results":"48","hashOfConfig":"38"},{"size":1449,"mtime":1648459836186,"results":"49","hashOfConfig":"38"},{"size":516,"mtime":1648557134858,"results":"50","hashOfConfig":"38"},{"size":2100,"mtime":1648557129950,"results":"51","hashOfConfig":"38"},{"size":3786,"mtime":1648557129214,"results":"52","hashOfConfig":"38"},{"size":1567,"mtime":1648106947252,"results":"53","hashOfConfig":"38"},{"size":308,"mtime":1648106947252,"results":"54","hashOfConfig":"38"},{"size":508,"mtime":1648106947252,"results":"55","hashOfConfig":"38"},{"size":417,"mtime":1648106947252,"results":"56","hashOfConfig":"38"},{"size":281,"mtime":1648106947252,"results":"57","hashOfConfig":"38"},{"size":620,"mtime":1648106947252,"results":"58","hashOfConfig":"38"},{"size":1517,"mtime":1648549087096,"results":"59","hashOfConfig":"38"},{"size":741,"mtime":1648106947252,"results":"60","hashOfConfig":"38"},{"size":139,"mtime":1648106947252,"results":"61","hashOfConfig":"38"},{"size":1642,"mtime":1648558408133,"results":"62","hashOfConfig":"38"},{"size":1837,"mtime":1648551528684,"results":"63","hashOfConfig":"38"},{"size":2274,"mtime":1648566303046,"results":"64","hashOfConfig":"38"},{"size":2415,"mtime":1648563254935,"results":"65","hashOfConfig":"38"},{"size":2297,"mtime":1648557134858,"results":"66","hashOfConfig":"38"},{"size":1929,"mtime":1648557774027,"results":"67","hashOfConfig":"38"},{"size":1489,"mtime":1648560988513,"results":"68","hashOfConfig":"38"},{"size":2534,"mtime":1648478251140,"results":"69","hashOfConfig":"38"},{"size":1441,"mtime":1648554062091,"results":"70","hashOfConfig":"38"},{"size":1938,"mtime":1648566953348,"results":"71","hashOfConfig":"38"},{"size":1894,"mtime":1648559499523,"results":"72","hashOfConfig":"38"},{"size":1812,"mtime":1648567251941,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},"9vvxss",{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"78"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"78"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/ProfileInfo.tsx",["192","193"],[],"import React, { useState } from 'react';\nimport { Avatar, Box, Button, Container, Link, Typography } from '@mui/material';\nimport { styled } from '@mui/styles';\nimport { IUser } from '../types/user';\nimport { useNavigate } from 'react-router';\nimport { getUser, signout } from '../store/slicers/userSlicer';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { EditFormDialog } from './EditProfileForm';\nimport { IEditData } from '../types/editProfile';\nimport { fetchChangeAvatar, fetchEditProfile } from '../store/asyncActions/userActions';\nimport { FileFormDialog } from './LoadAvatar';\nimport { IAvatar } from '../types/avatar';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../config';\n\nexport const ProfileInfo: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const user: IUser = useAppSelector(getUser);\n  const [formActive, setFormActive] = useState(false);\n  const [avatarActive, setAvatarActive] = useState(false);\n\n  const getData = (data: IEditData) => {\n    console.log(data);\n    dispatch(fetchEditProfile(data));\n  }\n\n  const clickAvatarHandler = () => {\n    setAvatarActive(true)\n  }\n\n  const getAvatar = (data: IAvatar) => {\n    dispatch(fetchChangeAvatar(data));\n  }\n\n  const clickEditHandler = () => {\n    setFormActive(true);\n  };\n\n  const clickSignoutHandler = () => {\n    dispatch(signout(''));\n    navigate('/');\n  };\n\n  return (\n    <StyledContainer>\n      <StyledInfoLeft>\n        <StyledAvatar src={`${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/${user.avatar}`}/>\n        <Button\n          color='primary'\n          onClick={clickAvatarHandler}\n          variant='contained'\n        >\n          Change Avatar\n        </Button>\n      </StyledInfoLeft>\n      <StyledInfoRight>\n        <StyledTypography\n          variant=\"body1\"\n          gutterBottom>\n          {`Login: ${user.login}`}\n        </StyledTypography>\n        <StyledTypography\n          variant=\"body1\"\n          gutterBottom>\n          {`Full name: ${user.fullName}`}\n        </StyledTypography>\n        <StyledTypography\n          variant=\"body1\"\n          gutterBottom>\n          {`E-Mail: ${user.email}`}\n        </StyledTypography>\n        <Button\n          color='primary'\n          onClick={clickEditHandler}\n          variant='contained'\n          style={{ marginRight: '15px' }}>\n          Редактировать\n        </Button>\n        <Button\n          color='error'\n          onClick={clickSignoutHandler}\n          variant='contained'>\n          Выйти\n        </Button>\n        <EditFormDialog\n            open={formActive}\n            setOpen={setFormActive}\n            getData={getData}\n        />\n        <FileFormDialog \n          open={avatarActive}\n          setOpen={setAvatarActive}\n          getData={getAvatar}\n        />\n      </StyledInfoRight>\n    </StyledContainer>\n  )\n}\n\nconst StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'row',\n  padding: '30px',\n});\n\n\nconst StyledInfoLeft = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  margin: '10px',\n});\n\nconst StyledAvatar = styled(Avatar)({\n  minWidth: 100,\n  minHeight: 100,\n  margin: '15px',\n});\n\nconst StyledOFD = styled(Button)({\n  color: '#0d74ce',\n  cursor: 'pointer',\n  transition: '.2s',\n  textDecoration: 'none',\n  '&:hover': {\n    color: '#6197b6',\n  },\n});\n\nconst StyledInfoRight = styled(Box)({\n  maxWidth: 800,\n  marginBottom: '20px',\n  marginRight: '20px',\n});\n\nconst StyledTypography = styled(Typography)({\n  display: 'flex',\n  flexDirection: 'column',\n});\n",["194","195"],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/CreateButton.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/LoadAvatar.tsx",["196"],[],"import React, { SyntheticEvent } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { IAvatar } from '../types/avatar';\n\ninterface FormProps {\n  open: boolean;\n  setOpen: (flag: boolean) => void;\n  getData: (data: IAvatar) => void;\n};\n\nexport const FileFormDialog: React.FC<FormProps> = ({open, setOpen, getData, }) => {\n  const avatar: IAvatar = {\n    name: '',\n    file: '',\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      avatar.name = e.target.files[0].name;\n      avatar.file = e.target.files[0];\n    }\n  };\n\n  const handleUpload = () => {\n    handleClose();\n    if (avatar) { \n      getData(avatar);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Load file</DialogTitle>\n        <DialogContent>\n          <input \n            type=\"file\"\n            accept='.jpg,.jpeg,.png'\n            onChange={handleChangeFile}     \n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleUpload}>Upload</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/userActions.ts",["197","198"],[],"import axios from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { IUser, IUserData } from '../../types/user';\nimport { IAvatar } from '../../types/avatar';\nimport { getToken, setIsAuth, setToken, setUser } from '../slicers/userSlicer';\nimport { resetDesks, setDesks } from '../slicers/deskSlicer';\nimport { IDesk } from '../../types/desk';\nimport { useAppSelector } from '../hooks';\nimport { IColumn } from '../../types/column';\nimport { resetColumns, setColumns } from '../slicers/columnSlicer';\nimport { ITask } from '../../types/task';\nimport { resetTasks, setTasks } from '../slicers/taskSlicer';\n\nconst GENERAL_URL = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}`;\n\nconst reqConfig = {\n  headers: {\n    \"Authorization\": `Bearer ${localStorage.getItem('token')}`,\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": GENERAL_URL,\n  }\n};\n\nexport const fetchSignUp = createAsyncThunk(\n  'users/fetchSignUp',\n  async (data: object, { dispatch, rejectWithValue }) => {\n    try {\n      reqConfig.headers['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n      const url = `${GENERAL_URL}/users/signup`;\n      const response = await axios.post<IUserData>(url, data, reqConfig);\n      const user: IUser = response.data.user;\n      const token: string = response.data.token;\n      const isAuth: boolean = !!user;\n      dispatch(setUser(user));\n      dispatch(setToken(token));\n      dispatch(setIsAuth(isAuth));\n      dispatch(resetDesks([]));\n      dispatch(resetColumns([]));\n      dispatch(resetTasks([]));\n    } catch (e: any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n\nexport const fetchSignIn = createAsyncThunk(\n  'users/fetchSignIn',\n  async (data: object, { dispatch, rejectWithValue }) => {\n    try {\n      reqConfig.headers['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n      const url = `${GENERAL_URL}/users/signin`;\n      const response = await axios.post(url, data, reqConfig);\n      const user: IUser = response.data.user;\n      const token: string = response.data.token;\n      const isAuth: boolean = !!user;\n      const desks: IDesk[] = response.data.user.desks;\n      const columns: IColumn[] = response.data.user.columns;\n      const tasks: ITask[] = response.data.user.tasks;\n      dispatch(setUser(user));\n      dispatch(setToken(token));\n      dispatch(setIsAuth(isAuth));\n      dispatch(setDesks(desks));\n      dispatch(setColumns(columns));\n      dispatch(setTasks(tasks));\n    } catch (e: any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n\nexport const fetchEditProfile = createAsyncThunk<IUserData, object>(\n  'users/fetchEditProfile',\n  async (data: object, { rejectWithValue }) => {\n    try {\n      reqConfig.headers['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n      const url = `${GENERAL_URL}/users/edit`;\n      const response = await axios.post(url, data, reqConfig);\n      return response.data;\n    } catch (e: any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n\nexport const fetchChangeAvatar = createAsyncThunk(\n  'users/fetchChangeAvatar',\n  async (data: IAvatar, { rejectWithValue }) => {\n    try {\n      reqConfig.headers['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n      const url = `${GENERAL_URL}/loads/loadAvatar`;\n      const formData = new FormData();\n      formData.append('avatar', data.file, data.name);\n      const response = await axios.post(url, formData, reqConfig);\n      return response.data;\n    } catch (e: any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n\nexport const fetchGetUser = createAsyncThunk(\n  'users/fetchGetUser',\n  async (_: void, { dispatch, rejectWithValue}) => {\n    try {\n      reqConfig.headers['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n      const url = `${GENERAL_URL}/users/auth`;\n      const response = await axios.get(url, reqConfig);\n      const user: IUser = response.data.user;\n      const token: string = response.data.token;\n      const isAuth: boolean = !!user;\n      const desks: IDesk[] = response.data.user.desks;\n      const columns: IColumn[] = response.data.user.columns;\n      const tasks: ITask[] = response.data.user.tasks;\n      dispatch(setUser(user));\n      dispatch(setToken(token));\n      dispatch(setIsAuth(isAuth));\n      dispatch(setDesks(desks));\n      dispatch(setColumns(columns));\n      dispatch(setTasks(tasks));\n    } catch (e: any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/Desk.tsx",["199"],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/ProfileDesks.tsx",["200","201"],[],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { CreateItem } from './CreateItem';\nimport { addDesk } from '../store/slicers/deskSlicer';\nimport { fetchAddDesk } from '../store/asyncActions/deskActions';\n\nimport { useAppSelector, useAppDispatch } from '../store/hooks';\nimport { CreateButton } from './CreateButton';\nimport { FormDialog as Form } from './CreatingForm';\n\nexport const ProfileDesks: React.FC = () => {\n  const [formActive, setFormActive] = useState(false);\n  const desks = useAppSelector(state => state.desks.desks);\n  const dispatch = useAppDispatch();\n\n  const addClickHandler = () => {\n    setFormActive(true);\n  };\n\n  const getTitle = (title: string) => {\n    // dispatch(addDesk(title));\n    dispatch(fetchAddDesk(title));\n  }\n\n  return (\n    <StyledContainer>\n      {desks.map((desk: { title: string; id: string; })=> {\n      return (\n        <CreateItem\n          title={desk.title}\n          href={`${desk.id}`}\n        />\n      );\n    })}\n      <CreateButton\n        title='Create desk!'\n        onClick={addClickHandler}\n      />\n    <Form \n      open={formActive} \n      setOpen={setFormActive}\n      dialogTitle='Desk name'\n      dialogContentText='Enter desk name'\n      label='Desk name'\n      getTitle={getTitle}\n    />\n    </StyledContainer>\n  );\n};\n\n\nconst StyledContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 30px;\n`;\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/deskActions.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/Header.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/Column.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/index.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/reportWebVitals.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/App.tsx",["202","203","204","205"],[],"import React, { createContext, useContext, useEffect } from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Routes, Route, Navigate, RouteProps } from 'react-router-dom';\nimport { PrivateRoute } from './hoc/PrivateRouter';\nimport { useAppDispatch } from './store/hooks';\nimport { fetchGetUser } from './store/asyncActions/userActions';\n\nimport { Mainpage } from './pages/Main';\nimport { Signuppage } from './pages/SignUp';\nimport { Signinpage } from './pages/SignIn';\nimport { NotFoundpage } from './pages/NotFound';\nimport { Profilepage } from './pages/Profile';\nimport { Deskpage } from './pages/Desk';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchGetUser());\n  });\n\n  return (\n  <>\n    <Header />\n    <Routes>\n      <Route\n        path='/'\n        element={<Mainpage />}\n      />\n      <Route\n        path='/signup'\n        element={<Signuppage />}\n      />\n      <Route\n        path='/signin'\n        element={<Signinpage />}\n      />\n      <Route\n        path='/profile'\n        element={\n          <PrivateRoute>\n            <Profilepage />\n          </PrivateRoute>\n        }\n      />\n      <Route\n        path='/desk/:id'\n        element={\n          <PrivateRoute>\n            <Deskpage />\n          </PrivateRoute>\n        }\n      />\n      <Route\n        path='*'\n        element={<NotFoundpage />}\n      />\n    </Routes>\n  </>\n  )\n};\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/store.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/SignIn.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/SignUp.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/Main.tsx",["206","207","208","209","210"],[],"import React from 'react';\nimport { Avatar, Box, Button, Container, Typography } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { styled } from '@mui/styles';\nimport { useAppSelector } from '../store/hooks';\n\nexport const Mainpage: React.FC = () => {\n  const isAuth = useAppSelector(state => state.users.isAuth);\n\n  return (\n    <>\n      {!isAuth ? \n    <StyledContainer>\n      <StyledTypography\n        variant=\"h5\"\n        gutterBottom>\n        Trello поможет организовать что угодно: от этапов крупного проекта до мелких задач. \n        Работайте вместе откуда угодно, даже с мобильных телефонов. ... Trello помогает командам эффективно решать рабочие задачи. \n        Работайте в команде, управляйте проектами и выводите продуктивность на новый уровень собственным уникальным способом вместе с Trello. \n        Зарегистрируйтесь — это бесплатно!\n      </StyledTypography>\n    </StyledContainer>\n    : <Navigate to='/profile' />}\n    </>\n)};\n\nconst StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'center',\n  padding: '30px 30px',\n});\n\nconst StyledTypography = styled(Typography)({\n  textAlign: 'center',\n  display: 'flex',\n  flexDirection: 'column',\n});\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/NotFound.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/Profile.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/hoc/PrivateRouter.tsx",["211","212","213"],[],"import { Navigate, Outlet, Route, RoutesProps, useLocation } from \"react-router\"\nimport { store } from \"../store/store\";\n\nexport const PrivateRoute = ({ children }: { children: JSX.Element }) => {\n  const location = useLocation();\n  // const isAuth = false;\n  const isAuth = store.getState().users['isAuth'];\n\n  if (isAuth) {\n    return children;\n  }\n  return <Navigate to='/signin' state={ {from: location} } />;\n}\n\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/hooks.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/BoardHeader.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/CreatingForm.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/FormItem.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/config/index.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/Task.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/EditProfileForm.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/CreateItem.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/columnActions.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/taskAction.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/TaskEditForm.tsx",["214"],[],"import React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { IEditData } from '../types/editProfile';\nimport { useAppDispatch } from '../store/hooks';\nimport { fetchDeleteTask, fetchEditTask } from '../store/asyncActions/taskAction';\n\ninterface FormProps {\n  open: boolean;\n  setOpen: (flag: boolean) => void;\n  taskId: number;\n};\n\ninterface IEditTask {\n  id: number;\n  columnId?: number;\n  title?: string;\n  proirity?: number;\n  position?: number;\n};\n\nexport const TaskEditForm: React.FC<FormProps> = ({open, setOpen, taskId}) => {\n  const dispatch = useAppDispatch();\n\n  const handleDelete = () => {\n    handleClose();\n    dispatch(fetchDeleteTask({id: taskId}));\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleEdit = () => {\n    handleClose();\n    const taskTitle: HTMLInputElement | null = document.querySelector('#taskTitle');\n    const data: IEditTask = { id: taskId };\n    if (taskTitle?.value.trim()) data.title = taskTitle?.value.trim();\n    dispatch(fetchEditTask(data));\n  };\n\n  return (\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Edit Task</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"taskTitle\"\n            label='Title'\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"error\" variant=\"text\" onClick={handleDelete}>Delete</Button>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleEdit}>Edit</Button>\n        </DialogActions>\n      </Dialog>\n  );\n};\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/columnSlicer.ts",["215"],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/userSlicer.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/taskSlicer.ts",["216"],[],"import { createSlice, Slice, PayloadAction } from '@reduxjs/toolkit';\nimport { ITask } from '../../types/task';\nimport type { RootState } from '../store';\n\ninterface TaskState {\n  tasks: ITask[];\n};\n\nconst initialState = {\n  tasks: [],\n} as TaskState;\n\n\nexport const taskSlice: Slice = createSlice({\n  name: 'task',\n  initialState,\n  reducers: {\n    setOneTask: (state, action: PayloadAction<ITask>) => {\n      state.tasks.push(action.payload);\n    },\n    setTasks: (state, action: PayloadAction<ITask[]>) => {\n      state.tasks = action.payload;\n    },\n    resetTasks: (state) => {\n      state.tasks = null;\n    },\n    editTask: (state, action: PayloadAction<ITask>) => {\n      const updatedTask = action.payload;\n      state.tasks.map((task: ITask) => {\n        if (task.id === updatedTask.id) {\n          task.title = updatedTask.title;\n          task.columnId = updatedTask.columnId;\n          task.position = updatedTask.position;\n          task.priority = updatedTask.priority;\n        }\n      });\n    },\n    deleteTask: (state, action: PayloadAction<number>) => {\n      const index = state.tasks.findIndex((task: { id: number; }) => task.id === action.payload);\n      state.tasks.splice(index, 1);\n    },\n  },\n});\n\nexport const { \n  addTask, \n  editTask, \n  deleteTask,\n  setOneTask,\n  setTasks,\n  resetTasks,\n} = taskSlice.actions;\n\nexport const getTasks = (state: RootState) => state.tasks.tasks;\n\nexport default taskSlice.reducer;\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/deskSlicer.ts",["217","218"],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/ColumnEditForm.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/DeskEditForm.tsx",["219"],[],{"ruleId":"220","severity":1,"message":"221","line":2,"column":42,"nodeType":"222","messageId":"223","endLine":2,"endColumn":46},{"ruleId":"220","severity":1,"message":"224","line":121,"column":7,"nodeType":"222","messageId":"223","endLine":121,"endColumn":16},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"220","severity":1,"message":"229","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":31},{"ruleId":"220","severity":1,"message":"230","line":6,"column":10,"nodeType":"222","messageId":"223","endLine":6,"endColumn":18},{"ruleId":"220","severity":1,"message":"231","line":9,"column":10,"nodeType":"222","messageId":"223","endLine":9,"endColumn":24},{"ruleId":"220","severity":1,"message":"232","line":15,"column":11,"nodeType":"222","messageId":"223","endLine":15,"endColumn":23},{"ruleId":"220","severity":1,"message":"233","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"234","line":4,"column":10,"nodeType":"222","messageId":"223","endLine":4,"endColumn":17},{"ruleId":"220","severity":1,"message":"235","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":30},{"ruleId":"220","severity":1,"message":"236","line":1,"column":32,"nodeType":"222","messageId":"223","endLine":1,"endColumn":42},{"ruleId":"220","severity":1,"message":"237","line":4,"column":25,"nodeType":"222","messageId":"223","endLine":4,"endColumn":33},{"ruleId":"220","severity":1,"message":"238","line":4,"column":35,"nodeType":"222","messageId":"223","endLine":4,"endColumn":45},{"ruleId":"220","severity":1,"message":"239","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":16},{"ruleId":"220","severity":1,"message":"240","line":2,"column":18,"nodeType":"222","messageId":"223","endLine":2,"endColumn":21},{"ruleId":"220","severity":1,"message":"241","line":2,"column":23,"nodeType":"222","messageId":"223","endLine":2,"endColumn":29},{"ruleId":"220","severity":1,"message":"242","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":21},{"ruleId":"220","severity":1,"message":"243","line":4,"column":20,"nodeType":"222","messageId":"223","endLine":4,"endColumn":31},{"ruleId":"220","severity":1,"message":"244","line":1,"column":20,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"245","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":33},{"ruleId":"220","severity":1,"message":"246","line":1,"column":35,"nodeType":"222","messageId":"223","endLine":1,"endColumn":46},{"ruleId":"220","severity":1,"message":"247","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":19},{"ruleId":"248","severity":1,"message":"249","line":28,"column":43,"nodeType":"250","messageId":"251","endLine":28,"endColumn":45},{"ruleId":"248","severity":1,"message":"249","line":29,"column":37,"nodeType":"250","messageId":"251","endLine":29,"endColumn":39},{"ruleId":"220","severity":1,"message":"252","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":22},{"ruleId":"248","severity":1,"message":"249","line":37,"column":39,"nodeType":"250","messageId":"251","endLine":37,"endColumn":41},{"ruleId":"220","severity":1,"message":"253","line":10,"column":10,"nodeType":"222","messageId":"223","endLine":10,"endColumn":15},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'StyledOFD' is assigned a value but never used.","no-native-reassign",["254"],"no-negated-in-lhs",["255"],"'SyntheticEvent' is defined but never used.","'getToken' is defined but never used.","'useAppSelector' is defined but never used.","'OverlayProps' is defined but never used.","'useEffect' is defined but never used.","'addDesk' is defined but never used.","'createContext' is defined but never used.","'useContext' is defined but never used.","'Navigate' is defined but never used.","'RouteProps' is defined but never used.","'Avatar' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'useDispatch' is defined but never used.","'useNavigate' is defined but never used.","'Outlet' is defined but never used.","'Route' is defined but never used.","'RoutesProps' is defined but never used.","'IEditData' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'fetchAddDesk' is defined but never used.","'IDesk' is defined but never used.","no-global-assign","no-unsafe-negation"]