[{"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/ProfileInfo.tsx":"1","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/CreateButton.tsx":"2","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/LoadAvatar.tsx":"3","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/userActions.ts":"4","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/Desk.tsx":"5","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/ProfileDesks.tsx":"6","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/deskActions.ts":"7","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/Header.tsx":"8","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/Column.tsx":"9","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/index.tsx":"10","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/reportWebVitals.ts":"11","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/App.tsx":"12","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/store.ts":"13","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/SignIn.tsx":"14","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/SignUp.tsx":"15","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/Main.tsx":"16","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/NotFound.tsx":"17","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/Profile.tsx":"18","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/hoc/PrivateRouter.tsx":"19","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/hooks.ts":"20","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/BoardHeader.tsx":"21","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/CreatingForm.tsx":"22","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/FormItem.tsx":"23","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/config/index.ts":"24","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/Task.tsx":"25","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/EditProfileForm.tsx":"26","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/CreateItem.tsx":"27","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/columnActions.ts":"28","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/taskAction.ts":"29","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/TaskEditForm.tsx":"30","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/columnSlicer.ts":"31","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/userSlicer.ts":"32","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/taskSlicer.ts":"33","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/deskSlicer.ts":"34","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/ColumnEditForm.tsx":"35","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/DeskEditForm.tsx":"36","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/TaskCreateForm.tsx":"37"},{"size":3614,"mtime":1648557130478,"results":"38","hashOfConfig":"39"},{"size":851,"mtime":1648480731382,"results":"40","hashOfConfig":"39"},{"size":1458,"mtime":1648119103440,"results":"41","hashOfConfig":"39"},{"size":4728,"mtime":1648651310621,"results":"42","hashOfConfig":"39"},{"size":3611,"mtime":1648739563353,"results":"43","hashOfConfig":"39"},{"size":1403,"mtime":1648649685215,"results":"44","hashOfConfig":"39"},{"size":2763,"mtime":1648567279600,"results":"45","hashOfConfig":"39"},{"size":1820,"mtime":1648557128610,"results":"46","hashOfConfig":"39"},{"size":5138,"mtime":1648736012865,"results":"47","hashOfConfig":"39"},{"size":473,"mtime":1648106947252,"results":"48","hashOfConfig":"39"},{"size":425,"mtime":1648106947252,"results":"49","hashOfConfig":"39"},{"size":1449,"mtime":1648459836186,"results":"50","hashOfConfig":"39"},{"size":516,"mtime":1648557134858,"results":"51","hashOfConfig":"39"},{"size":2100,"mtime":1648557129950,"results":"52","hashOfConfig":"39"},{"size":3786,"mtime":1648557129214,"results":"53","hashOfConfig":"39"},{"size":1567,"mtime":1648106947252,"results":"54","hashOfConfig":"39"},{"size":308,"mtime":1648106947252,"results":"55","hashOfConfig":"39"},{"size":508,"mtime":1648106947252,"results":"56","hashOfConfig":"39"},{"size":417,"mtime":1648106947252,"results":"57","hashOfConfig":"39"},{"size":281,"mtime":1648106947252,"results":"58","hashOfConfig":"39"},{"size":620,"mtime":1648106947252,"results":"59","hashOfConfig":"39"},{"size":1635,"mtime":1648720493748,"results":"60","hashOfConfig":"39"},{"size":741,"mtime":1648106947252,"results":"61","hashOfConfig":"39"},{"size":139,"mtime":1648106947252,"results":"62","hashOfConfig":"39"},{"size":2173,"mtime":1648726176318,"results":"63","hashOfConfig":"39"},{"size":1837,"mtime":1648551528684,"results":"64","hashOfConfig":"39"},{"size":2274,"mtime":1648630615749,"results":"65","hashOfConfig":"39"},{"size":3028,"mtime":1648738035389,"results":"66","hashOfConfig":"39"},{"size":2874,"mtime":1648735428433,"results":"67","hashOfConfig":"39"},{"size":4207,"mtime":1648720482285,"results":"68","hashOfConfig":"39"},{"size":1489,"mtime":1648560988513,"results":"69","hashOfConfig":"39"},{"size":2534,"mtime":1648478251140,"results":"70","hashOfConfig":"39"},{"size":1641,"mtime":1648732953207,"results":"71","hashOfConfig":"39"},{"size":1938,"mtime":1648566953348,"results":"72","hashOfConfig":"39"},{"size":1894,"mtime":1648559499523,"results":"73","hashOfConfig":"39"},{"size":1864,"mtime":1648630805537,"results":"74","hashOfConfig":"39"},{"size":3194,"mtime":1648719562093,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},"9vvxss",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"80"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"80"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"80"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/ProfileInfo.tsx",["198","199"],[],"import React, { useState } from 'react';\nimport { Avatar, Box, Button, Container, Link, Typography } from '@mui/material';\nimport { styled } from '@mui/styles';\nimport { IUser } from '../types/user';\nimport { useNavigate } from 'react-router';\nimport { getUser, signout } from '../store/slicers/userSlicer';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { EditFormDialog } from './EditProfileForm';\nimport { IEditData } from '../types/editProfile';\nimport { fetchChangeAvatar, fetchEditProfile } from '../store/asyncActions/userActions';\nimport { FileFormDialog } from './LoadAvatar';\nimport { IAvatar } from '../types/avatar';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../config';\n\nexport const ProfileInfo: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const user: IUser = useAppSelector(getUser);\n  const [formActive, setFormActive] = useState(false);\n  const [avatarActive, setAvatarActive] = useState(false);\n\n  const getData = (data: IEditData) => {\n    console.log(data);\n    dispatch(fetchEditProfile(data));\n  }\n\n  const clickAvatarHandler = () => {\n    setAvatarActive(true)\n  }\n\n  const getAvatar = (data: IAvatar) => {\n    dispatch(fetchChangeAvatar(data));\n  }\n\n  const clickEditHandler = () => {\n    setFormActive(true);\n  };\n\n  const clickSignoutHandler = () => {\n    dispatch(signout(''));\n    navigate('/');\n  };\n\n  return (\n    <StyledContainer>\n      <StyledInfoLeft>\n        <StyledAvatar src={`${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/${user.avatar}`}/>\n        <Button\n          color='primary'\n          onClick={clickAvatarHandler}\n          variant='contained'\n        >\n          Change Avatar\n        </Button>\n      </StyledInfoLeft>\n      <StyledInfoRight>\n        <StyledTypography\n          variant=\"body1\"\n          gutterBottom>\n          {`Login: ${user.login}`}\n        </StyledTypography>\n        <StyledTypography\n          variant=\"body1\"\n          gutterBottom>\n          {`Full name: ${user.fullName}`}\n        </StyledTypography>\n        <StyledTypography\n          variant=\"body1\"\n          gutterBottom>\n          {`E-Mail: ${user.email}`}\n        </StyledTypography>\n        <Button\n          color='primary'\n          onClick={clickEditHandler}\n          variant='contained'\n          style={{ marginRight: '15px' }}>\n          Редактировать\n        </Button>\n        <Button\n          color='error'\n          onClick={clickSignoutHandler}\n          variant='contained'>\n          Выйти\n        </Button>\n        <EditFormDialog\n            open={formActive}\n            setOpen={setFormActive}\n            getData={getData}\n        />\n        <FileFormDialog \n          open={avatarActive}\n          setOpen={setAvatarActive}\n          getData={getAvatar}\n        />\n      </StyledInfoRight>\n    </StyledContainer>\n  )\n}\n\nconst StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'row',\n  padding: '30px',\n});\n\n\nconst StyledInfoLeft = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  margin: '10px',\n});\n\nconst StyledAvatar = styled(Avatar)({\n  minWidth: 100,\n  minHeight: 100,\n  margin: '15px',\n});\n\nconst StyledOFD = styled(Button)({\n  color: '#0d74ce',\n  cursor: 'pointer',\n  transition: '.2s',\n  textDecoration: 'none',\n  '&:hover': {\n    color: '#6197b6',\n  },\n});\n\nconst StyledInfoRight = styled(Box)({\n  maxWidth: 800,\n  marginBottom: '20px',\n  marginRight: '20px',\n});\n\nconst StyledTypography = styled(Typography)({\n  display: 'flex',\n  flexDirection: 'column',\n});\n",["200","201"],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/CreateButton.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/LoadAvatar.tsx",["202"],[],"import React, { SyntheticEvent } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { IAvatar } from '../types/avatar';\n\ninterface FormProps {\n  open: boolean;\n  setOpen: (flag: boolean) => void;\n  getData: (data: IAvatar) => void;\n};\n\nexport const FileFormDialog: React.FC<FormProps> = ({open, setOpen, getData, }) => {\n  const avatar: IAvatar = {\n    name: '',\n    file: '',\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      avatar.name = e.target.files[0].name;\n      avatar.file = e.target.files[0];\n    }\n  };\n\n  const handleUpload = () => {\n    handleClose();\n    if (avatar) { \n      getData(avatar);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Load file</DialogTitle>\n        <DialogContent>\n          <input \n            type=\"file\"\n            accept='.jpg,.jpeg,.png'\n            onChange={handleChangeFile}     \n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleUpload}>Upload</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/userActions.ts",["203","204"],[],"import axios from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { IUser, IUserData } from '../../types/user';\nimport { IAvatar } from '../../types/avatar';\nimport { getToken, setIsAuth, setToken, setUser } from '../slicers/userSlicer';\nimport { resetDesks, setDesks } from '../slicers/deskSlicer';\nimport { IDesk } from '../../types/desk';\nimport { useAppSelector } from '../hooks';\nimport { IColumn } from '../../types/column';\nimport { resetColumns, setColumns } from '../slicers/columnSlicer';\nimport { ITask } from '../../types/task';\nimport { resetTasks, setTasks } from '../slicers/taskSlicer';\n\nconst GENERAL_URL = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}`;\n\nconst reqConfig = {\n  headers: {\n    \"Authorization\": `Bearer ${localStorage.getItem('token')}`,\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": GENERAL_URL,\n  }\n};\n\nexport const fetchSignUp = createAsyncThunk(\n  'users/fetchSignUp',\n  async (data: object, { dispatch, rejectWithValue }) => {\n    try {\n      reqConfig.headers['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n      const url = `${GENERAL_URL}/users/signup`;\n      const response = await axios.post<IUserData>(url, data, reqConfig);\n      const user: IUser = response.data.user;\n      const token: string = response.data.token;\n      const isAuth: boolean = !!user;\n      dispatch(setUser(user));\n      dispatch(setToken(token));\n      dispatch(setIsAuth(isAuth));\n      dispatch(resetDesks([]));\n      dispatch(resetColumns([]));\n      dispatch(resetTasks([]));\n    } catch (e: any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n\nexport const fetchSignIn = createAsyncThunk(\n  'users/fetchSignIn',\n  async (data: object, { dispatch, rejectWithValue }) => {\n    try {\n      reqConfig.headers['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n      const url = `${GENERAL_URL}/users/signin`;\n      const response = await axios.post(url, data, reqConfig);\n      const user: IUser = response.data.user;\n      const token: string = response.data.token;\n      const isAuth: boolean = !!user;\n      const desks: IDesk[] = response.data.user.desks;\n      const columns: IColumn[] = response.data.user.columns;\n      const tasks: ITask[] = response.data.user.tasks;\n      dispatch(setUser(user));\n      dispatch(setToken(token));\n      dispatch(setIsAuth(isAuth));\n      dispatch(setDesks(desks));\n      dispatch(setColumns(columns));\n      dispatch(setTasks(tasks));\n    } catch (e: any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n\nexport const fetchEditProfile = createAsyncThunk<IUserData, object>(\n  'users/fetchEditProfile',\n  async (data: object, { rejectWithValue }) => {\n    try {\n      reqConfig.headers['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n      const url = `${GENERAL_URL}/users/edit`;\n      const response = await axios.post(url, data, reqConfig);\n      return response.data;\n    } catch (e: any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n\nexport const fetchChangeAvatar = createAsyncThunk(\n  'users/fetchChangeAvatar',\n  async (data: IAvatar, { rejectWithValue }) => {\n    try {\n      reqConfig.headers['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n      const url = `${GENERAL_URL}/loads/loadAvatar`;\n      const formData = new FormData();\n      formData.append('avatar', data.file, data.name);\n      const response = await axios.post(url, formData, reqConfig);\n      return response.data;\n    } catch (e: any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n\nexport const fetchGetUser = createAsyncThunk(\n  'users/fetchGetUser',\n  async (_: void, { dispatch, rejectWithValue}) => {\n    try {\n      reqConfig.headers['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n      const url = `${GENERAL_URL}/users/auth`;\n      const response = await axios.get(url, reqConfig);\n      const user: IUser = response.data.user;\n      const token: string = response.data.token;\n      const isAuth: boolean = !!user;\n      const desks: IDesk[] = response.data.user.desks;\n      const columns: IColumn[] = response.data.user.columns;\n      const tasks: ITask[] = response.data.user.tasks;\n      dispatch(setUser(user));\n      dispatch(setToken(token));\n      dispatch(setIsAuth(isAuth));\n      dispatch(setDesks(desks));\n      dispatch(setColumns(columns));\n      dispatch(setTasks(tasks));\n    } catch (e: any) {\n      // alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/Desk.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/ProfileDesks.tsx",["205"],[],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { CreateItem } from './CreateItem';\nimport { fetchAddDesk } from '../store/asyncActions/deskActions';\n\nimport { useAppSelector, useAppDispatch } from '../store/hooks';\nimport { CreateButton } from './CreateButton';\nimport { FormDialog as Form } from './CreatingForm';\n\nexport const ProfileDesks: React.FC = () => {\n  const [formActive, setFormActive] = useState(false);\n  const desks = useAppSelector(state => state.desks.desks);\n  const dispatch = useAppDispatch();\n\n  const addClickHandler = () => {\n    setFormActive(true);\n  };\n\n  const getTitle = (title: string) => {\n    if (title) dispatch(fetchAddDesk(title));\n  }\n\n  return (\n    <StyledContainer>\n      {desks.map((desk: { title: string; id: string; })=> {\n      return (\n        <CreateItem\n          title={desk.title}\n          href={`${desk.id}`}\n        />\n      );\n    })}\n      <CreateButton\n        title='Create desk!'\n        onClick={addClickHandler}\n      />\n    <Form \n      open={formActive} \n      setOpen={setFormActive}\n      dialogTitle='Desk name'\n      dialogContentText='Enter desk name'\n      label='Desk name'\n      getData={getTitle}\n    />\n    </StyledContainer>\n  );\n};\n\n\nconst StyledContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 30px;\n`;\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/deskActions.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/Header.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/Column.tsx",["206","207","208","209"],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/index.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/reportWebVitals.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/App.tsx",["210","211","212","213"],[],"import React, { createContext, useContext, useEffect } from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Routes, Route, Navigate, RouteProps } from 'react-router-dom';\nimport { PrivateRoute } from './hoc/PrivateRouter';\nimport { useAppDispatch } from './store/hooks';\nimport { fetchGetUser } from './store/asyncActions/userActions';\n\nimport { Mainpage } from './pages/Main';\nimport { Signuppage } from './pages/SignUp';\nimport { Signinpage } from './pages/SignIn';\nimport { NotFoundpage } from './pages/NotFound';\nimport { Profilepage } from './pages/Profile';\nimport { Deskpage } from './pages/Desk';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchGetUser());\n  });\n\n  return (\n  <>\n    <Header />\n    <Routes>\n      <Route\n        path='/'\n        element={<Mainpage />}\n      />\n      <Route\n        path='/signup'\n        element={<Signuppage />}\n      />\n      <Route\n        path='/signin'\n        element={<Signinpage />}\n      />\n      <Route\n        path='/profile'\n        element={\n          <PrivateRoute>\n            <Profilepage />\n          </PrivateRoute>\n        }\n      />\n      <Route\n        path='/desk/:id'\n        element={\n          <PrivateRoute>\n            <Deskpage />\n          </PrivateRoute>\n        }\n      />\n      <Route\n        path='*'\n        element={<NotFoundpage />}\n      />\n    </Routes>\n  </>\n  )\n};\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/store.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/SignIn.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/SignUp.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/Main.tsx",["214","215","216","217","218"],[],"import React from 'react';\nimport { Avatar, Box, Button, Container, Typography } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { styled } from '@mui/styles';\nimport { useAppSelector } from '../store/hooks';\n\nexport const Mainpage: React.FC = () => {\n  const isAuth = useAppSelector(state => state.users.isAuth);\n\n  return (\n    <>\n      {!isAuth ? \n    <StyledContainer>\n      <StyledTypography\n        variant=\"h5\"\n        gutterBottom>\n        Trello поможет организовать что угодно: от этапов крупного проекта до мелких задач. \n        Работайте вместе откуда угодно, даже с мобильных телефонов. ... Trello помогает командам эффективно решать рабочие задачи. \n        Работайте в команде, управляйте проектами и выводите продуктивность на новый уровень собственным уникальным способом вместе с Trello. \n        Зарегистрируйтесь — это бесплатно!\n      </StyledTypography>\n    </StyledContainer>\n    : <Navigate to='/profile' />}\n    </>\n)};\n\nconst StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'center',\n  padding: '30px 30px',\n});\n\nconst StyledTypography = styled(Typography)({\n  textAlign: 'center',\n  display: 'flex',\n  flexDirection: 'column',\n});\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/NotFound.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/pages/Profile.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/hoc/PrivateRouter.tsx",["219","220","221"],[],"import { Navigate, Outlet, Route, RoutesProps, useLocation } from \"react-router\"\nimport { store } from \"../store/store\";\n\nexport const PrivateRoute = ({ children }: { children: JSX.Element }) => {\n  const location = useLocation();\n  // const isAuth = false;\n  const isAuth = store.getState().users['isAuth'];\n\n  if (isAuth) {\n    return children;\n  }\n  return <Navigate to='/signin' state={ {from: location} } />;\n}\n\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/hooks.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/BoardHeader.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/CreatingForm.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/FormItem.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/config/index.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/Task.tsx",["222"],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/EditProfileForm.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/CreateItem.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/columnActions.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/asyncActions/taskAction.ts",["223"],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/TaskEditForm.tsx",["224","225"],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/columnSlicer.ts",["226"],[],"import { createSlice, Slice, PayloadAction } from '@reduxjs/toolkit';\nimport { IColumn } from '../../types/column';\nimport type { RootState } from '../store';\n\ninterface ColumnState {\n  columns: IColumn[];\n};\n\nconst initialState = {\n  columns: [],\n} as ColumnState;\n\nexport const columnSlice: Slice = createSlice({\n  name: 'column',\n  initialState,\n  reducers: {\n    setOneColumn: (state, action: PayloadAction<IColumn>) => {\n      state.columns.push(action.payload);\n    },\n    setColumns: (state, action: PayloadAction<IColumn[]>) => {\n      state.columns = action.payload;\n    },\n    resetColumns: (state) => {\n      state.columns = null;\n    },\n    editColumn: (state, action: PayloadAction<IColumn>) => {\n      const updatedColumn = action.payload;\n      state.columns.map((column: IColumn) => {\n        if (column.id === updatedColumn.id) {\n          column.title = updatedColumn.title;\n          column.deskId = updatedColumn.deskId;\n          column.position = updatedColumn.position;\n        }\n      });\n    },\n    deleteColumn: (state, action: PayloadAction<{ id: number; }>) => {\n      const index = state.columns.findIndex((column: IColumn) => column.id === +action.payload);\n      state.columns.splice(index, 1);\n    },    \n  },\n});\n\nexport const { \n  addColumns, \n  editColumn, \n  deleteColumn,\n  setColumns,\n  setOneColumn,\n  resetColumns,\n} = columnSlice.actions;\n\nexport const getColumns = (state: RootState) => state.columns.columns;\n\nexport default columnSlice.reducer;\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/userSlicer.ts",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/taskSlicer.ts",["227","228"],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/store/slicers/deskSlicer.ts",["229","230"],[],"import { createSlice, Slice, PayloadAction } from '@reduxjs/toolkit';\nimport { IDesk } from '../../types/desk';\nimport { fetchAddDesk } from '../asyncActions/deskActions';\nimport type { RootState } from '../store';\n\ninterface DeskState {\n  desks: IDesk[];\n};\n\nconst initialState = {\n  desks: [],\n} as DeskState;\n\nexport const deskSlice: Slice = createSlice({\n  name: 'desk',\n  initialState,\n  reducers: {\n    // addDesk: (state, action: PayloadAction<string>) => {\n    //   const desk: IDesk = {\n    //     id: `d${Date.now()}`,\n    //     title: action.payload,\n    //   };\n\n    //   state.desks.push(desk);\n    // },\n    setDesks: (state, action: PayloadAction<IDesk[]>) => {\n      state.desks = action.payload;\n    },\n    setOneDesk: (state, action: PayloadAction<IDesk>) => {\n      state.desks.push(action.payload);\n    },\n    resetDesks: (state) => {\n      state.desks = null;\n    },\n    editDesk: (state, action: PayloadAction<IDesk>) => {\n      const updatedDesk = action.payload;\n      state.desks.map((column: IDesk) => {\n        if (column.id === updatedDesk.id) {\n          column.title = updatedDesk.title;\n        }\n      });\n    },\n    deleteDesk: (state, action: PayloadAction<{ id: string; }>) => {\n      const index = state.desks.findIndex((column: IDesk) => column.id === +action.payload);\n      state.desks.splice(index, 1);\n    },\n  },\n  // extraReducers: (builder) => {\n  //   // Add desk\n  //   builder.addCase(fetchAddDesk.fulfilled, (state, action: PayloadAction<IDesk>) => {\n  //     state.desks.push(action.payload);      \n  //   });\n  //   // Get desk\n  //   builder.addCase(fetchGetDesk.fulfilled, (state, action: any) => {\n  //     // state.desks.push(action.payload);\n  //   })\n  // }\n});\n\nexport const {\n  addDesk, \n  editDesk, \n  deleteDesk,\n  setOneDesk,\n  setDesks,\n  resetDesks,\n} = deskSlice.actions;\n\nexport const getDesks = (state: RootState) => state.desks.desks;\n\nexport default deskSlice.reducer;\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/ColumnEditForm.tsx",[],[],"/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/DeskEditForm.tsx",["231","232"],[],"import React, { SyntheticEvent } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useAppDispatch } from '../store/hooks';\nimport { fetchDeleteDesk, fetchEditDesk } from '../store/asyncActions/deskActions';\nimport { IDesk } from '../types/desk';\n\ninterface FormProps {\n  open: boolean;\n  setOpen: (flag: boolean) => void;\n  id: number;\n};\n\ninterface IEditDesk {\n  id: number;\n  title?: string;\n}\n\nexport const DeskEditForm: React.FC<FormProps> = ({open, setOpen, id}) => {\n  const dispatch = useAppDispatch();\n\n  const handleDelete = () => {\n    setOpen(false);\n    dispatch(fetchDeleteDesk({ id }));\n  };\n\n  const handleClose = (e: SyntheticEvent) => {\n    e.preventDefault();\n    setOpen(false);\n  };\n\n  const handleEdit = () => {\n    setOpen(false);\n    const deskTitle: HTMLInputElement | null = document.querySelector('#deskTitle');\n    const data = { \n      id,\n      title: deskTitle?.value.trim(),\n    };\n    dispatch(fetchEditDesk(data));\n  };\n\n  return (\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Edit Desk</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"deskTitle\"\n            label='Title'\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"error\" variant=\"text\" onClick={handleDelete}>Delete</Button>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleEdit}>Edit</Button>\n        </DialogActions>\n      </Dialog>\n  );\n};\n","/home/fusion/Documents/NikolayDimitrenko/trello-client/src/components/TaskCreateForm.tsx",["233","234"],[],{"ruleId":"235","severity":1,"message":"236","line":2,"column":42,"nodeType":"237","messageId":"238","endLine":2,"endColumn":46},{"ruleId":"235","severity":1,"message":"239","line":121,"column":7,"nodeType":"237","messageId":"238","endLine":121,"endColumn":16},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"235","severity":1,"message":"244","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":31},{"ruleId":"235","severity":1,"message":"245","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":18},{"ruleId":"235","severity":1,"message":"246","line":9,"column":10,"nodeType":"237","messageId":"238","endLine":9,"endColumn":24},{"ruleId":"235","severity":1,"message":"247","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":26},{"ruleId":"235","severity":1,"message":"248","line":9,"column":24,"nodeType":"237","messageId":"238","endLine":9,"endColumn":37},{"ruleId":"235","severity":1,"message":"249","line":9,"column":39,"nodeType":"237","messageId":"238","endLine":9,"endColumn":52},{"ruleId":"235","severity":1,"message":"250","line":13,"column":10,"nodeType":"237","messageId":"238","endLine":13,"endColumn":20},{"ruleId":"235","severity":1,"message":"251","line":14,"column":10,"nodeType":"237","messageId":"238","endLine":14,"endColumn":17},{"ruleId":"235","severity":1,"message":"252","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":30},{"ruleId":"235","severity":1,"message":"253","line":1,"column":32,"nodeType":"237","messageId":"238","endLine":1,"endColumn":42},{"ruleId":"235","severity":1,"message":"254","line":4,"column":25,"nodeType":"237","messageId":"238","endLine":4,"endColumn":33},{"ruleId":"235","severity":1,"message":"255","line":4,"column":35,"nodeType":"237","messageId":"238","endLine":4,"endColumn":45},{"ruleId":"235","severity":1,"message":"256","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":16},{"ruleId":"235","severity":1,"message":"257","line":2,"column":18,"nodeType":"237","messageId":"238","endLine":2,"endColumn":21},{"ruleId":"235","severity":1,"message":"258","line":2,"column":23,"nodeType":"237","messageId":"238","endLine":2,"endColumn":29},{"ruleId":"235","severity":1,"message":"259","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":21},{"ruleId":"235","severity":1,"message":"260","line":4,"column":20,"nodeType":"237","messageId":"238","endLine":4,"endColumn":31},{"ruleId":"235","severity":1,"message":"261","line":1,"column":20,"nodeType":"237","messageId":"238","endLine":1,"endColumn":26},{"ruleId":"235","severity":1,"message":"262","line":1,"column":28,"nodeType":"237","messageId":"238","endLine":1,"endColumn":33},{"ruleId":"235","severity":1,"message":"263","line":1,"column":35,"nodeType":"237","messageId":"238","endLine":1,"endColumn":46},{"ruleId":"235","severity":1,"message":"264","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":19},{"ruleId":"235","severity":1,"message":"265","line":68,"column":13,"nodeType":"237","messageId":"238","endLine":68,"endColumn":21},{"ruleId":"235","severity":1,"message":"266","line":3,"column":18,"nodeType":"237","messageId":"238","endLine":3,"endColumn":29},{"ruleId":"235","severity":1,"message":"267","line":9,"column":10,"nodeType":"237","messageId":"238","endLine":9,"endColumn":19},{"ruleId":"268","severity":1,"message":"269","line":28,"column":43,"nodeType":"270","messageId":"271","endLine":28,"endColumn":45},{"ruleId":"235","severity":1,"message":"272","line":1,"column":10,"nodeType":"237","messageId":"238","endLine":1,"endColumn":19},{"ruleId":"268","severity":1,"message":"269","line":30,"column":37,"nodeType":"270","messageId":"271","endLine":30,"endColumn":39},{"ruleId":"235","severity":1,"message":"273","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":22},{"ruleId":"268","severity":1,"message":"269","line":37,"column":39,"nodeType":"270","messageId":"271","endLine":37,"endColumn":41},{"ruleId":"235","severity":1,"message":"274","line":10,"column":10,"nodeType":"237","messageId":"238","endLine":10,"endColumn":15},{"ruleId":"235","severity":1,"message":"275","line":18,"column":11,"nodeType":"237","messageId":"238","endLine":18,"endColumn":20},{"ruleId":"235","severity":1,"message":"276","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":23},{"ruleId":"235","severity":1,"message":"277","line":22,"column":9,"nodeType":"237","messageId":"238","endLine":22,"endColumn":17},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'StyledOFD' is assigned a value but never used.","no-native-reassign",["278"],"no-negated-in-lhs",["279"],"'SyntheticEvent' is defined but never used.","'getToken' is defined but never used.","'useAppSelector' is defined but never used.","'useEffect' is defined but never used.","'fetchEditTask' is defined but never used.","'fetchMoveTask' is defined but never used.","'getColumns' is defined but never used.","'IColumn' is defined but never used.","'createContext' is defined but never used.","'useContext' is defined but never used.","'Navigate' is defined but never used.","'RouteProps' is defined but never used.","'Avatar' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'useDispatch' is defined but never used.","'useNavigate' is defined but never used.","'Outlet' is defined but never used.","'Route' is defined but never used.","'RoutesProps' is defined but never used.","'Draggable' is defined but never used.","'response' is assigned a value but never used.","'SliderThumb' is defined but never used.","'IEditData' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'positions' is defined but never used.","'fetchAddDesk' is defined but never used.","'IDesk' is defined but never used.","'IEditDesk' is defined but never used.","'useRef' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]