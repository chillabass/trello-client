{"ast":null,"code":"var _jsxFileName = \"/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/components/ProfileDesks.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Container, styled } from '@mui/material';\nimport { CreateItem } from './CreateItem';\nimport { addDesk } from '../store/reducers/deskReducer';\nimport { useAppSelector, useAppDispatch } from '../store/hooks';\nimport { StylesProvider } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProfileDesks = () => {\n  _s();\n\n  const desks = useAppSelector(state => state.desks.desks);\n  const dispatch = useAppDispatch();\n\n  const addClickHandler = () => {\n    dispatch(addDesk({\n      title: 'Test!'\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(StylesProvider, {\n    injectFirst: true,\n    children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n      children: [desks.map(desk => {\n        return /*#__PURE__*/_jsxDEV(CreateItem, {\n          title: desk.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: addClickHandler,\n        children: \"Create desk!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileDesks, \"azcvYL7zEkxb7dIhIcrEkamJ4Go=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n\n_c = ProfileDesks;\nconst StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'row',\n  padding: '30px'\n});\n_c2 = StyledContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProfileDesks\");\n$RefreshReg$(_c2, \"StyledContainer\");","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/components/ProfileDesks.tsx"],"names":["React","Button","Container","styled","CreateItem","addDesk","useAppSelector","useAppDispatch","StylesProvider","ProfileDesks","desks","state","dispatch","addClickHandler","title","map","desk","StyledContainer","display","justifyContent","flexDirection","padding"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,MAA5B,QAA0C,eAA1C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,gBAA/C;AACA,SAASC,cAAT,QAA+B,aAA/B;;AAEA,OAAO,MAAMC,YAAsB,GAAG,MAAM;AAAA;;AAC1C,QAAMC,KAAK,GAAGJ,cAAc,CAACK,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYA,KAAtB,CAA5B;AACA,QAAME,QAAQ,GAAGL,cAAc,EAA/B;;AAEA,QAAMM,eAAe,GAAG,MAAM;AAC5BD,IAAAA,QAAQ,CAACP,OAAO,CAAC;AAACS,MAAAA,KAAK,EAAE;AAAR,KAAD,CAAR,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,cAAD;AAAgB,IAAA,WAAW,MAA3B;AAAA,2BACA,QAAC,eAAD;AAAA,iBAAkBJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAA6B;AACvD,4BACE,QAAC,UAAD;AACE,UAAA,KAAK,EAAEA,IAAI,CAACF;AADd;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANiB,CAAlB,eAOE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,OAAO,EAAED,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA1BM;;GAAMJ,Y;UACGH,c,EACGC,c;;;KAFNE,Y;AA6Bb,MAAMQ,eAAe,GAAGd,MAAM,CAACD,SAAD,CAAN,CAAkB;AACxCgB,EAAAA,OAAO,EAAE,MAD+B;AAExCC,EAAAA,cAAc,EAAE,YAFwB;AAGxCC,EAAAA,aAAa,EAAE,KAHyB;AAIxCC,EAAAA,OAAO,EAAE;AAJ+B,CAAlB,CAAxB;MAAMJ,e","sourcesContent":["import React from 'react';\nimport { Button, Container, styled } from '@mui/material';\nimport { CreateItem } from './CreateItem';\nimport { addDesk } from '../store/reducers/deskReducer';\nimport { useAppSelector, useAppDispatch } from '../store/hooks';\nimport { StylesProvider } from '@mui/styles';\n\nexport const ProfileDesks: React.FC = () => {\n  const desks = useAppSelector(state => state.desks.desks);\n  const dispatch = useAppDispatch();\n\n  const addClickHandler = () => {\n    dispatch(addDesk({title: 'Test!'}));\n  };\n\n  return (\n    <StylesProvider injectFirst>\n    <StyledContainer>{desks.map((desk: { title: string; })=> {\n      return (\n        <CreateItem \n          title={desk.title}\n        />\n      );\n    })}\n      <Button \n        variant='outlined'\n        onClick={addClickHandler}\n      >\n        Create desk!\n      </Button>\n    </StyledContainer>\n    </StylesProvider>\n  )\n};\n\n\nconst StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'row',\n  padding: '30px',\n});\n\n"]},"metadata":{},"sourceType":"module"}