{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const columnSlice = createSlice({\n  name: 'column',\n  initialState: {\n    columns: []\n  },\n  reducers: {\n    addColumns: (state, action) => {\n      const {\n        deskId,\n        title\n      } = action.payload;\n      const column = {\n        id: `d${Date.now()}`,\n        deskId,\n        title\n      };\n      state.columns.push(column);\n    },\n    editColumns: (state, action) => {\n      const id = action.payload.id;\n      const title = action.payload.title;\n      state.columns.filter(column => column.id === id).title = title;\n    },\n    deleteColumns: (state, action) => {\n      const id = action.payload.id;\n      const index = state.columns.findIndex(column => column.id === id);\n      state.columns.splice(index, 1);\n    }\n  }\n});\nexport const {\n  addColumns,\n  editColumns,\n  deleteColumns\n} = columnSlice.actions;\nexport default columnSlice.reducer;","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/store/reducers/columnReducer.ts"],"names":["createSlice","columnSlice","name","initialState","columns","reducers","addColumns","state","action","deskId","title","payload","column","id","Date","now","push","editColumns","filter","deleteColumns","index","findIndex","splice","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAAmC,kBAAnC;AAGA,OAAO,MAAMC,WAAkB,GAAGD,WAAW,CAAC;AAC5CE,EAAAA,IAAI,EAAE,QADsC;AAE5CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE;AADG,GAF8B;AAK5CC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7B,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAoBF,MAAM,CAACG,OAAjC;AACA,YAAMC,MAAe,GAAG;AACtBC,QAAAA,EAAE,EAAG,IAAGC,IAAI,CAACC,GAAL,EAAW,EADG;AAEtBN,QAAAA,MAFsB;AAGtBC,QAAAA;AAHsB,OAAxB;AAKAH,MAAAA,KAAK,CAACH,OAAN,CAAcY,IAAd,CAAmBJ,MAAnB;AACD,KATO;AAURK,IAAAA,WAAW,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;AAC9B,YAAMK,EAAE,GAAGL,MAAM,CAACG,OAAP,CAAeE,EAA1B;AACA,YAAMH,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeD,KAA7B;AACAH,MAAAA,KAAK,CAACH,OAAN,CAAcc,MAAd,CAAsBN,MAAD,IAA6BA,MAAM,CAACC,EAAP,KAAcA,EAAhE,EAAoEH,KAApE,GAA4EA,KAA5E;AACD,KAdO;AAeRS,IAAAA,aAAa,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AAChC,YAAMK,EAAE,GAAGL,MAAM,CAACG,OAAP,CAAeE,EAA1B;AACA,YAAMO,KAAK,GAAGb,KAAK,CAACH,OAAN,CAAciB,SAAd,CAAyBT,MAAD,IAA6BA,MAAM,CAACC,EAAP,KAAcA,EAAnE,CAAd;AACAN,MAAAA,KAAK,CAACH,OAAN,CAAckB,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AACD;AAnBO;AALkC,CAAD,CAAtC;AA4BP,OAAO,MAAM;AACXd,EAAAA,UADW;AAEXW,EAAAA,WAFW;AAGXE,EAAAA;AAHW,IAITlB,WAAW,CAACsB,OAJT;AAMP,eAAetB,WAAW,CAACuB,OAA3B","sourcesContent":["import { createSlice, Slice } from '@reduxjs/toolkit';\nimport { IColumn } from '../../types/column';\n\nexport const columnSlice: Slice = createSlice({\n  name: 'column',\n  initialState: {\n    columns: [],\n  },\n  reducers: {\n    addColumns: (state, action) => {\n      const { deskId, title } = action.payload;\n      const column: IColumn = {\n        id: `d${Date.now()}`,\n        deskId,\n        title,\n      };\n      state.columns.push(column);\n    },\n    editColumns: (state, action) => {\n      const id = action.payload.id;\n      const title = action.payload.title;\n      state.columns.filter((column: { id: string; }) => column.id === id).title = title;\n    },\n    deleteColumns: (state, action) => {\n      const id = action.payload.id;\n      const index = state.columns.findIndex((column: { id: string; }) => column.id === id);\n      state.columns.splice(index, 1);\n    },    \n  },\n});\n\nexport const { \n  addColumns, \n  editColumns, \n  deleteColumns,\n} = columnSlice.actions;\n\nexport default columnSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}