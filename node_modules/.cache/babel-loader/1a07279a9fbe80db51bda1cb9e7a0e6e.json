{"ast":null,"code":"import axios from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\nimport { createAsyncThunk } from '@reduxjs/toolkit'; // import { IUserData } from '../../types/user';\n\nconst GENERAL_URL = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/desks`;\nconst reqConfig = {\n  headers: {\n    \"Authorization\": `Bearer ${localStorage.getItem('token')}`,\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": GENERAL_URL\n  }\n};\nexport const fetchAddDesk = createAsyncThunk('desks/fetchAddDesk', async (data, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    debugger;\n    console.log();\n    const url = `${GENERAL_URL}/add`;\n    const desk = {\n      id: `d${Date.now()}`,\n      title: data\n    };\n    const response = await axios.post(url, desk, reqConfig);\n    return response.data;\n  } catch (e) {\n    var _e$response, _e$response2;\n\n    alert((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data);\n    return rejectWithValue((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.data);\n  }\n});\nexport const fetchEditDesk = createAsyncThunk('desks/fetchEditDesk', async (data, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    const url = `${GENERAL_URL}/edit`;\n    const response = await axios.post(url, data, reqConfig);\n    return response.data;\n  } catch (e) {\n    var _e$response3, _e$response4;\n\n    alert((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : _e$response3.data);\n    return rejectWithValue((_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : _e$response4.data);\n  }\n});\nexport const fetchDeleteDesk = createAsyncThunk('desks/fetchDeleteDesk', async (data, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n\n  try {\n    const url = `${GENERAL_URL}/delete`;\n    const response = await axios.post(url, data, reqConfig);\n    return response.data;\n  } catch (e) {\n    var _e$response5, _e$response6;\n\n    alert((_e$response5 = e.response) === null || _e$response5 === void 0 ? void 0 : _e$response5.data);\n    return rejectWithValue((_e$response6 = e.response) === null || _e$response6 === void 0 ? void 0 : _e$response6.data);\n  }\n});","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/store/asyncActions/deskActions.ts"],"names":["axios","PROTOCOL","SERVER_HOST","SERVER_PORT","createAsyncThunk","GENERAL_URL","reqConfig","headers","localStorage","getItem","fetchAddDesk","data","rejectWithValue","console","log","url","desk","id","Date","now","title","response","post","e","alert","fetchEditDesk","fetchDeleteDesk"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,cAAnD;AACA,SAASC,gBAAT,QAAiC,kBAAjC,C,CACA;;AAGA,MAAMC,WAAW,GAAI,GAAEJ,QAAS,MAAKC,WAAY,IAAGC,WAAY,QAAhE;AAEA,MAAMG,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE;AACP,qBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EADlD;AAEP,oBAAgB,kBAFT;AAGP,mCAA+BJ;AAHxB;AADO,CAAlB;AAQA,OAAO,MAAMK,YAAY,GAAGN,gBAAgB,CAC1C,oBAD0C,EAE1C,OAAOO,IAAP,WAA6C;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AAC3C,MAAI;AACF;AACAC,IAAAA,OAAO,CAACC,GAAR;AACA,UAAMC,GAAW,GAAI,GAAEV,WAAY,MAAnC;AACA,UAAMW,IAAW,GAAG;AAClBC,MAAAA,EAAE,EAAG,IAAGC,IAAI,CAACC,GAAL,EAAW,EADD;AAElBC,MAAAA,KAAK,EAAET;AAFW,KAApB;AAIA,UAAMU,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAkBP,GAAlB,EAAuBC,IAAvB,EAA6BV,SAA7B,CAAvB;AACA,WAAOe,QAAQ,CAACV,IAAhB;AACD,GAVD,CAUE,OAAOY,CAAP,EAAe;AAAA;;AACfC,IAAAA,KAAK,gBAACD,CAAC,CAACF,QAAH,gDAAC,YAAYV,IAAb,CAAL;AACA,WAAOC,eAAe,iBAACW,CAAC,CAACF,QAAH,iDAAC,aAAYV,IAAb,CAAtB;AACD;AACF,CAjByC,CAArC;AAoBP,OAAO,MAAMc,aAAa,GAAGrB,gBAAgB,CAC3C,qBAD2C,EAE3C,OAAOO,IAAP,YAA6C;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AAC3C,MAAI;AACF,UAAMG,GAAW,GAAI,GAAEV,WAAY,OAAnC;AACA,UAAMgB,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAWP,GAAX,EAAgBJ,IAAhB,EAAsBL,SAAtB,CAAvB;AACA,WAAOe,QAAQ,CAACV,IAAhB;AACD,GAJD,CAIE,OAAOY,CAAP,EAAe;AAAA;;AACfC,IAAAA,KAAK,iBAACD,CAAC,CAACF,QAAH,iDAAC,aAAYV,IAAb,CAAL;AACA,WAAOC,eAAe,iBAACW,CAAC,CAACF,QAAH,iDAAC,aAAYV,IAAb,CAAtB;AACD;AACF,CAX0C,CAAtC;AAcP,OAAO,MAAMe,eAAe,GAAGtB,gBAAgB,CAC7C,uBAD6C,EAE7C,OAAOO,IAAP,YAA6C;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AAC3C,MAAI;AACF,UAAMG,GAAW,GAAI,GAAEV,WAAY,SAAnC;AACA,UAAMgB,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAWP,GAAX,EAAgBJ,IAAhB,EAAsBL,SAAtB,CAAvB;AACA,WAAOe,QAAQ,CAACV,IAAhB;AACD,GAJD,CAIE,OAAOY,CAAP,EAAe;AAAA;;AACfC,IAAAA,KAAK,iBAACD,CAAC,CAACF,QAAH,iDAAC,aAAYV,IAAb,CAAL;AACA,WAAOC,eAAe,iBAACW,CAAC,CAACF,QAAH,iDAAC,aAAYV,IAAb,CAAtB;AACD;AACF,CAX4C,CAAxC","sourcesContent":["import axios from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n// import { IUserData } from '../../types/user';\nimport { IDesk } from '../../types/desk';\n\nconst GENERAL_URL = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/desks`;\n\nconst reqConfig = {\n  headers: { \n    \"Authorization\": `Bearer ${localStorage.getItem('token')}`,\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": GENERAL_URL,\n  }\n};\n\nexport const fetchAddDesk = createAsyncThunk<IDesk, string>(\n  'desks/fetchAddDesk',\n  async (data: string, { rejectWithValue }) => {\n    try {\n      debugger;\n      console.log()\n      const url: string = `${GENERAL_URL}/add`;\n      const desk: IDesk = {\n        id: `d${Date.now()}`,\n        title: data,\n      };\n      const response = await axios.post<IDesk>(url, desk, reqConfig);\n      return response.data;\n    } catch (e: any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n\nexport const fetchEditDesk = createAsyncThunk<IDesk, object>(\n  'desks/fetchEditDesk',\n  async (data: object, { rejectWithValue }) => {\n    try {\n      const url: string = `${GENERAL_URL}/edit`;\n      const response = await axios.post(url, data, reqConfig);\n      return response.data;\n    } catch (e: any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n\nexport const fetchDeleteDesk = createAsyncThunk<IDesk, object>(\n  'desks/fetchDeleteDesk',\n  async (data: object, { rejectWithValue }) => {\n    try {\n      const url: string = `${GENERAL_URL}/delete`;\n      const response = await axios.post(url, data, reqConfig);\n      return response.data;\n    } catch (e: any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n"]},"metadata":{},"sourceType":"module"}