{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n;\nconst initialState = {\n  desks: []\n};\nexport const deskSlice = createSlice({\n  name: 'desk',\n  initialState,\n  reducers: {\n    addDesk: (state, action) => {\n      const {\n        title\n      } = action.payload;\n      const desk = {\n        id: `d${Date.now()}`,\n        title\n      };\n      state.desks.push(desk);\n    },\n    editDesk: (state, action) => {\n      const {\n        id,\n        title\n      } = action.payload;\n      state.desks.filter(desk => desk.id === id).title = title;\n    },\n    deleteDesk: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const index = state.desks.findIndex(desk => desk.id === id);\n      state.desks.splice(index, 1);\n    }\n  }\n});\nexport const {\n  addDesk,\n  editDesk,\n  deleteDesk\n} = deskSlice.actions;\nexport const selectDesks = state => state.desks.desks;\nexport default deskSlice.reducer;","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/store/reducers/deskReducer.ts"],"names":["createSlice","initialState","desks","deskSlice","name","reducers","addDesk","state","action","title","payload","desk","id","Date","now","push","editDesk","filter","deleteDesk","index","findIndex","splice","actions","selectDesks","reducer"],"mappings":"AAAA,SAASA,WAAT,QAAkD,kBAAlD;AAMC;AAED,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,OAAO,MAAMC,SAAgB,GAAGH,WAAW,CAAC;AAC1CI,EAAAA,IAAI,EAAE,MADoC;AAE1CH,EAAAA,YAF0C;AAG1CI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAsD;AAC7D,YAAM;AAAEC,QAAAA;AAAF,UAAYD,MAAM,CAACE,OAAzB;AACA,YAAMC,IAAW,GAAG;AAClBC,QAAAA,EAAE,EAAG,IAAGC,IAAI,CAACC,GAAL,EAAW,EADD;AAElBL,QAAAA;AAFkB,OAApB;AAIAF,MAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiBJ,IAAjB;AACD,KARO;AASRK,IAAAA,QAAQ,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAkE;AAC1E,YAAM;AAACI,QAAAA,EAAD;AAAKH,QAAAA;AAAL,UAAeD,MAAM,CAACE,OAA5B;AACAH,MAAAA,KAAK,CAACL,KAAN,CAAYe,MAAZ,CAAoBN,IAAD,IAA2BA,IAAI,CAACC,EAAL,KAAYA,EAA1D,EAA8DH,KAA9D,GAAsEA,KAAtE;AACD,KAZO;AAaRS,IAAAA,UAAU,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmD;AAC7D,YAAM;AAAEI,QAAAA;AAAF,UAASJ,MAAM,CAACE,OAAtB;AACA,YAAMS,KAAK,GAAGZ,KAAK,CAACL,KAAN,CAAYkB,SAAZ,CAAuBT,IAAD,IAA2BA,IAAI,CAACC,EAAL,KAAYA,EAA7D,CAAd;AACAL,MAAAA,KAAK,CAACL,KAAN,CAAYmB,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACD;AAjBO;AAHgC,CAAD,CAApC;AAwBP,OAAO,MAAM;AACXb,EAAAA,OADW;AAEXU,EAAAA,QAFW;AAGXE,EAAAA;AAHW,IAITf,SAAS,CAACmB,OAJP;AAMP,OAAO,MAAMC,WAAW,GAAIhB,KAAD,IAAsBA,KAAK,CAACL,KAAN,CAAYA,KAAtD;AAEP,eAAeC,SAAS,CAACqB,OAAzB","sourcesContent":["import { createSlice, Slice, PayloadAction } from '@reduxjs/toolkit';\nimport { IDesk } from '../../types/desk';\nimport type { RootState } from '../store';\n\ninterface DeskState {\n  desks: IDesk[];\n};\n\nconst initialState = {\n  desks: [],\n} as DeskState;\n\nexport const deskSlice: Slice = createSlice({\n  name: 'desk',\n  initialState,\n  reducers: {\n    addDesk: (state, action: PayloadAction<{ title: string; }>) => {\n      const { title } = action.payload;\n      const desk: IDesk = {\n        id: `d${Date.now()}`,\n        title,\n      };\n      state.desks.push(desk);\n    },\n    editDesk: (state, action: PayloadAction<{ id: string; title: string; }>) => {\n      const {id, title } = action.payload;\n      state.desks.filter((desk: { id: string; }) => desk.id === id).title = title;\n    },\n    deleteDesk: (state, action: PayloadAction<{ id: string; }>) => {\n      const { id } = action.payload;\n      const index = state.desks.findIndex((desk: { id: string; }) => desk.id === id);\n      state.desks.splice(index, 1);\n    },    \n  },\n});\n\nexport const { \n  addDesk, \n  editDesk, \n  deleteDesk,\n} = deskSlice.actions;\n\nexport const selectDesks = (state: RootState) => state.desks.desks;\n\nexport default deskSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}