{"ast":null,"code":"import axios from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nconst GENERAL_URL = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/users`;\nexport const fetchSignUp = createAsyncThunk('users/fetchSignUp', async (data, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const url = `${GENERAL_URL}/signup`;\n    const response = await axios.post(url, data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": url\n      }\n    });\n    return response.data;\n  } catch (e) {\n    var _e$response, _e$response2;\n\n    alert((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data);\n    return rejectWithValue((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.data);\n  }\n});\nexport const fetchSignIn = createAsyncThunk('users/fetchSignIn', async (data, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    const url = `${GENERAL_URL}/signin`;\n    const response = await axios.post(url, data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": url\n      }\n    });\n    return response.data.user;\n  } catch (e) {\n    var _e$response3, _e$response4;\n\n    alert((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : _e$response3.data);\n    return rejectWithValue((_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : _e$response4.data);\n  }\n});","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/store/asyncActions/userActions.ts"],"names":["axios","PROTOCOL","SERVER_HOST","SERVER_PORT","createAsyncThunk","GENERAL_URL","fetchSignUp","data","rejectWithValue","url","response","post","headers","e","alert","fetchSignIn","user"],"mappings":"AACA,OAAOA,KAAP,MAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,cAAnD;AACA,SAASC,gBAAT,QAA2C,kBAA3C;AAGA,MAAMC,WAAW,GAAI,GAAEJ,QAAS,MAAKC,WAAY,IAAGC,WAAY,QAAhE;AAEA,OAAO,MAAMG,WAAW,GAAGF,gBAAgB,CACzC,mBADyC,EAEzC,OAAOG,IAAP,WAA6C;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AAC3C,MAAI;AACF,UAAMC,GAAW,GAAI,GAAEJ,WAAY,SAAnC;AACA,UAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAkBF,GAAlB,EAAuBF,IAAvB,EAA6B;AAClDK,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,uCAA+BH;AAFxB;AADyC,KAA7B,CAAvB;AAMA,WAAOC,QAAQ,CAACH,IAAhB;AACD,GATD,CASE,OAAOM,CAAP,EAA4B;AAAA;;AAC5BC,IAAAA,KAAK,gBAACD,CAAC,CAACH,QAAH,gDAAC,YAAYH,IAAb,CAAL;AACA,WAAOC,eAAe,iBAACK,CAAC,CAACH,QAAH,iDAAC,aAAYH,IAAb,CAAtB;AACD;AACF,CAhBwC,CAApC;AAmBP,OAAO,MAAMQ,WAAW,GAAGX,gBAAgB,CACzC,mBADyC,EAEzC,OAAOG,IAAP,YAA6C;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AAC3C,MAAI;AACF,UAAMC,GAAW,GAAI,GAAEJ,WAAY,SAAnC;AACA,UAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAWF,GAAX,EAAgBF,IAAhB,EAAsB;AAC3CK,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,uCAA+BH;AAFxB;AADkC,KAAtB,CAAvB;AAMA,WAAOC,QAAQ,CAACH,IAAT,CAAcS,IAArB;AACD,GATD,CASE,OAAOH,CAAP,EAA4B;AAAA;;AAC5BC,IAAAA,KAAK,iBAACD,CAAC,CAACH,QAAH,iDAAC,aAAYH,IAAb,CAAL;AACA,WAAOC,eAAe,iBAACK,CAAC,CAACH,QAAH,iDAAC,aAAYH,IAAb,CAAtB;AACD;AACF,CAhBwC,CAApC","sourcesContent":["import { auth } from '../reducers/userReduser';\nimport axios, { AxiosError } from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\nimport { createAsyncThunk, Dispatch } from '@reduxjs/toolkit';\nimport { IUser } from '../../types/user';\n\nconst GENERAL_URL = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/users`;\n\nexport const fetchSignUp = createAsyncThunk<IUser, object>(\n  'users/fetchSignUp',\n  async (data: object, { rejectWithValue }) => {\n    try {\n      const url: string = `${GENERAL_URL}/signup`;\n      const response = await axios.post<IUser>(url, data, { \n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": url,\n        },\n      });\n      return response.data;\n    } catch (e: AxiosError | any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n\nexport const fetchSignIn = createAsyncThunk<IUser, object>(\n  'users/fetchSignIn',\n  async (data: object, { rejectWithValue }) => {\n    try {\n      const url: string = `${GENERAL_URL}/signin`;\n      const response = await axios.post(url, data, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": url,\n        },\n      });\n      return response.data.user;\n    } catch (e: AxiosError | any) {\n      alert(e.response?.data);\n      return rejectWithValue(e.response?.data);\n    }\n  }\n);\n\n\n"]},"metadata":{},"sourceType":"module"}