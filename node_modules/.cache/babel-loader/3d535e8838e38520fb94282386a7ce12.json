{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const taskSlice = createSlice({\n  name: 'task',\n  initialState: {\n    tasks: []\n  },\n  reducers: {\n    addTask: (state, action) => {\n      const task = {\n        id: `t${Date.now()}`,\n        columnId: action.payload.columnId,\n        title: action.payload.title,\n        position: state.tasks.length,\n        priority: 1\n      };\n      state.tasks.push(task);\n    },\n    editTask: (state, action) => {\n      const id = action.payload.id;\n      const title = action.payload.title;\n      state.tasks.filter(task => task.id === id).title = title;\n    },\n    deleteTask: (state, action) => {\n      const id = action.payload.id;\n      const index = state.tasks.findIndex(task => task.id === id);\n      state.tasks.splice(index, 1);\n    }\n  }\n});\nexport const {\n  addTask,\n  editTask,\n  deleteTask\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/store/reducers/taskReducer.ts"],"names":["createSlice","taskSlice","name","initialState","tasks","reducers","addTask","state","action","task","id","Date","now","columnId","payload","title","position","length","priority","push","editTask","filter","deleteTask","index","findIndex","splice","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAAmC,kBAAnC;AAGA,OAAO,MAAMC,SAAgB,GAAGD,WAAW,CAAC;AAC1CE,EAAAA,IAAI,EAAE,MADoC;AAE1CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAF4B;AAK1CC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1B,YAAMC,IAAW,GAAG;AAClBC,QAAAA,EAAE,EAAG,IAAGC,IAAI,CAACC,GAAL,EAAW,EADD;AAElBC,QAAAA,QAAQ,EAAEL,MAAM,CAACM,OAAP,CAAeD,QAFP;AAGlBE,QAAAA,KAAK,EAAEP,MAAM,CAACM,OAAP,CAAeC,KAHJ;AAIlBC,QAAAA,QAAQ,EAAET,KAAK,CAACH,KAAN,CAAYa,MAJJ;AAKlBC,QAAAA,QAAQ,EAAE;AALQ,OAApB;AAOAX,MAAAA,KAAK,CAACH,KAAN,CAAYe,IAAZ,CAAiBV,IAAjB;AACD,KAVO;AAWRW,IAAAA,QAAQ,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAME,EAAE,GAAGF,MAAM,CAACM,OAAP,CAAeJ,EAA1B;AACA,YAAMK,KAAK,GAAGP,MAAM,CAACM,OAAP,CAAeC,KAA7B;AACAR,MAAAA,KAAK,CAACH,KAAN,CAAYiB,MAAZ,CAAoBZ,IAAD,IAA2BA,IAAI,CAACC,EAAL,KAAYA,EAA1D,EAA8DK,KAA9D,GAAsEA,KAAtE;AACD,KAfO;AAgBRO,IAAAA,UAAU,EAAE,CAACf,KAAD,EAAQC,MAAR,KAAmB;AAC7B,YAAME,EAAE,GAAGF,MAAM,CAACM,OAAP,CAAeJ,EAA1B;AACA,YAAMa,KAAK,GAAGhB,KAAK,CAACH,KAAN,CAAYoB,SAAZ,CAAuBf,IAAD,IAA2BA,IAAI,CAACC,EAAL,KAAYA,EAA7D,CAAd;AACAH,MAAAA,KAAK,CAACH,KAAN,CAAYqB,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACD;AApBO;AALgC,CAAD,CAApC;AA6BP,OAAO,MAAM;AACXjB,EAAAA,OADW;AAEXc,EAAAA,QAFW;AAGXE,EAAAA;AAHW,IAITrB,SAAS,CAACyB,OAJP;AAMP,eAAezB,SAAS,CAAC0B,OAAzB","sourcesContent":["import { createSlice, Slice } from '@reduxjs/toolkit';\nimport { ITask } from '../../types/task';\n\nexport const taskSlice: Slice = createSlice({\n  name: 'task',\n  initialState: {\n    tasks: [],\n  },\n  reducers: {\n    addTask: (state, action) => {\n      const task: ITask = {\n        id: `t${Date.now()}`,\n        columnId: action.payload.columnId,\n        title: action.payload.title,\n        position: state.tasks.length,\n        priority: 1,\n      };\n      state.tasks.push(task);\n    },\n    editTask: (state, action) => {\n      const id = action.payload.id;\n      const title = action.payload.title;\n      state.tasks.filter((task: { id: string; }) => task.id === id).title = title;\n    },\n    deleteTask: (state, action) => {\n      const id = action.payload.id;\n      const index = state.tasks.findIndex((task: { id: string; }) => task.id === id);\n      state.tasks.splice(index, 1);\n    },\n  },\n});\n\nexport const { \n  addTask, \n  editTask, \n  deleteTask,\n} = taskSlice.actions;\n\nexport default taskSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}