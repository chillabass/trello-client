{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\nexport const userSlice = createSlice({\n  name: 'users',\n  initialState: {\n    currentUser: {}\n  },\n  reducers: {\n    signup: (state, action) => {\n      const url = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/users/signup`;\n      console.log(url);\n      axios.post(url, action.payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}`\n        }\n      }).then(response => {\n        console.log(response);\n      });\n    },\n    signin: (state, action) => {\n      axios.post(`${PROTOCOL}//${SERVER_HOST}:${SERVER_PORT}/users/signin`, action.payload).then(response => {\n        console.log(response);\n      });\n    }\n  }\n});\nexport const {\n  signup,\n  signin\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/store/reducers/userReduser.ts"],"names":["createSlice","axios","PROTOCOL","SERVER_HOST","SERVER_PORT","userSlice","name","initialState","currentUser","reducers","signup","state","action","url","console","log","post","payload","headers","then","response","signin","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,cAAnD;AAEA,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;AACnCM,EAAAA,IAAI,EAAE,OAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD,GAFqB;AAKnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzB,YAAMC,GAAG,GAAI,GAAEX,QAAS,MAAKC,WAAY,IAAGC,WAAY,eAAxD;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAZ,MAAAA,KAAK,CAACe,IAAN,CAAWH,GAAX,EAAgBD,MAAM,CAACK,OAAvB,EAAgC;AAC9BC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,yCAAgC,GAAEhB,QAAS,MAAKC,WAAY,IAAGC,WAAY;AAFpE;AADqB,OAAhC,EAKGe,IALH,CAKQC,QAAQ,IAAI;AAClBN,QAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACD,OAPD;AAQD,KAZO;AAaRC,IAAAA,MAAM,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACzBX,MAAAA,KAAK,CAACe,IAAN,CAAY,GAAEd,QAAS,KAAIC,WAAY,IAAGC,WAAY,eAAtD,EAAsEQ,MAAM,CAACK,OAA7E,EAAsFE,IAAtF,CAA2FC,QAAQ,IAAI;AACrGN,QAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACD,OAFD;AAGD;AAjBO;AALyB,CAAD,CAA7B;AA0BP,OAAO,MAAM;AAAEV,EAAAA,MAAF;AAAUW,EAAAA;AAAV,IAAqBhB,SAAS,CAACiB,OAArC;AAEP,eAAejB,SAAS,CAACkB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\n\nexport const userSlice = createSlice({\n  name: 'users',\n  initialState: {\n    currentUser: {},\n  },\n  reducers: {\n    signup: (state, action) => {\n      const url = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/users/signup`;\n      console.log(url)\n      axios.post(url, action.payload, { \n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}`,\n        },\n      }).then(response => {\n        console.log(response);\n      });\n    },\n    signin: (state, action) => {\n      axios.post(`${PROTOCOL}//${SERVER_HOST}:${SERVER_PORT}/users/signin`, action.payload).then(response => {\n        console.log(response);\n      });\n    },\n  },\n});\n\nexport const { signup, signin } = userSlice.actions;\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}