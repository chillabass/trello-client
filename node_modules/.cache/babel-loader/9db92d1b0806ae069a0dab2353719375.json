{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n;\nconst initialState = {\n  tasks: []\n};\nexport const taskSlice = createSlice({\n  name: 'task',\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      const {\n        columnId,\n        title\n      } = action.payload;\n      const task = {\n        id: `t${Date.now()}`,\n        columnId,\n        title,\n        position: state.tasks.length,\n        priority: 1\n      };\n      state.tasks.tasks.push(task);\n    },\n    editTask: (state, action) => {\n      const {\n        id,\n        title\n      } = action.payload;\n      state.tasks.filter(task => task.id === id).title = title;\n    },\n    deleteTask: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const index = state.tasks.findIndex(task => task.id === id);\n      state.tasks.splice(index, 1);\n    }\n  }\n});\nexport const {\n  addTask,\n  editTask,\n  deleteTask\n} = taskSlice.actions;\nexport const selectTasks = state => state.tasks.tasks;\nexport default taskSlice.reducer;","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/store/reducers/taskReducer.ts"],"names":["createSlice","initialState","tasks","taskSlice","name","reducers","addTask","state","action","columnId","title","payload","task","id","Date","now","position","length","priority","push","editTask","filter","deleteTask","index","findIndex","splice","actions","selectTasks","reducer"],"mappings":"AAAA,SAASA,WAAT,QAAkD,kBAAlD;AAMC;AAED,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAKA,OAAO,MAAMC,SAAgB,GAAGH,WAAW,CAAC;AAC1CI,EAAAA,IAAI,EAAE,MADoC;AAE1CH,EAAAA,YAF0C;AAG1CI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAwE;AAC/E,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAsBF,MAAM,CAACG,OAAnC;AACA,YAAMC,IAAW,GAAG;AAClBC,QAAAA,EAAE,EAAG,IAAGC,IAAI,CAACC,GAAL,EAAW,EADD;AAElBN,QAAAA,QAFkB;AAGlBC,QAAAA,KAHkB;AAIlBM,QAAAA,QAAQ,EAAET,KAAK,CAACL,KAAN,CAAYe,MAJJ;AAKlBC,QAAAA,QAAQ,EAAE;AALQ,OAApB;AAOAX,MAAAA,KAAK,CAACL,KAAN,CAAYA,KAAZ,CAAkBiB,IAAlB,CAAuBP,IAAvB;AACD,KAXO;AAYRQ,IAAAA,QAAQ,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAkE;AAC1E,YAAM;AAACK,QAAAA,EAAD;AAAKH,QAAAA;AAAL,UAAcF,MAAM,CAACG,OAA3B;AACAJ,MAAAA,KAAK,CAACL,KAAN,CAAYmB,MAAZ,CAAoBT,IAAD,IAA2BA,IAAI,CAACC,EAAL,KAAYA,EAA1D,EAA8DH,KAA9D,GAAsEA,KAAtE;AACD,KAfO;AAgBRY,IAAAA,UAAU,EAAE,CAACf,KAAD,EAAQC,MAAR,KAAmD;AAC7D,YAAM;AAAEK,QAAAA;AAAF,UAASL,MAAM,CAACG,OAAtB;AACA,YAAMY,KAAK,GAAGhB,KAAK,CAACL,KAAN,CAAYsB,SAAZ,CAAuBZ,IAAD,IAA2BA,IAAI,CAACC,EAAL,KAAYA,EAA7D,CAAd;AACAN,MAAAA,KAAK,CAACL,KAAN,CAAYuB,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACD;AApBO;AAHgC,CAAD,CAApC;AA2BP,OAAO,MAAM;AACXjB,EAAAA,OADW;AAEXc,EAAAA,QAFW;AAGXE,EAAAA;AAHW,IAITnB,SAAS,CAACuB,OAJP;AAMP,OAAO,MAAMC,WAAW,GAAIpB,KAAD,IAAsBA,KAAK,CAACL,KAAN,CAAYA,KAAtD;AAEP,eAAeC,SAAS,CAACyB,OAAzB","sourcesContent":["import { createSlice, Slice, PayloadAction } from '@reduxjs/toolkit';\nimport { ITask } from '../../types/task';\nimport type { RootState } from '../store';\n\ninterface TaskState {\n  tasks: ITask[];\n};\n\nconst initialState = {\n  tasks: [],\n} as TaskState;\n\n\nexport const taskSlice: Slice = createSlice({\n  name: 'task',\n  initialState,\n  reducers: {\n    addTask: (state, action: PayloadAction<{ columnId: string; title: string; }>) => {\n      const { columnId, title } = action.payload;\n      const task: ITask = {\n        id: `t${Date.now()}`,\n        columnId,\n        title,\n        position: state.tasks.length,\n        priority: 1,\n      };\n      state.tasks.tasks.push(task);\n    },\n    editTask: (state, action: PayloadAction<{ id: string; title: string; }>) => {\n      const {id, title} = action.payload;\n      state.tasks.filter((task: { id: string; }) => task.id === id).title = title;\n    },\n    deleteTask: (state, action: PayloadAction<{ id: string; }>) => {\n      const { id } = action.payload;\n      const index = state.tasks.findIndex((task: { id: string; }) => task.id === id);\n      state.tasks.splice(index, 1);\n    },\n  },\n});\n\nexport const { \n  addTask, \n  editTask, \n  deleteTask,\n} = taskSlice.actions;\n\nexport const selectTasks = (state: RootState) => state.tasks.tasks;\n\nexport default taskSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}