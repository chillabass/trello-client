{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchSignIn, fetchSignUp } from '../asyncActions/userActions';\n;\nconst initialState = {\n  currentUser: JSON.parse(localStorage.getItem('currentUser') || '{}'),\n  token: localStorage.getItem('token'),\n  isAuth: !!localStorage.getItem('isAuth')\n};\nexport const userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    auth: (state, action) => {\n      const {\n        token,\n        user\n      } = action.payload;\n      console.log(user);\n      state.currentUser = user;\n      state.isAuth = true;\n      localStorage.setItem('token', token);\n    },\n    signout: state => {\n      state.currentUser = {};\n      state.isAuth = false;\n      state.token = '';\n      localStorage.removeItem('currentUser');\n      localStorage.removeItem('token');\n      localStorage.removeItem('isAuth');\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchSignUp.fulfilled, (state, action) => {\n      const {\n        token,\n        user\n      } = action.payload;\n      state.currentUser = user;\n      state.token = token || '';\n      state.isAuth = true;\n      localStorage.setItem('currentUser', JSON.stringify(state.currentUser));\n      localStorage.setItem('token', state.token);\n      localStorage.setItem('isAuth', String(state.isAuth));\n    });\n    builder.addCase(fetchSignUp.rejected, (state, action) => {\n      state.currentUser = null;\n      state.isAuth = false;\n    });\n    builder.addCase(fetchSignIn.fulfilled, (state, action) => {\n      const {\n        token,\n        user\n      } = action.payload;\n      state.currentUser = user;\n      state.token = token || '';\n      state.isAuth = true;\n      console.log(state.currentUser);\n      localStorage.setItem('currentUser', JSON.stringify(state.currentUser));\n      localStorage.setItem('token', state.token);\n      localStorage.setItem('isAuth', String(state.isAuth));\n    });\n    builder.addCase(fetchSignIn.rejected, (state, action) => {\n      state.currentUser = null;\n      state.isAuth = false;\n    });\n  }\n});\nexport const {\n  auth,\n  signout\n} = userSlice.actions;\nexport const getUser = state => state.users.currentUser;\nexport const getAuth = state => state.users.isAuth;\nexport const getToken = state => state.users.token;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/store/reducers/userReducer.ts"],"names":["createSlice","fetchSignIn","fetchSignUp","initialState","currentUser","JSON","parse","localStorage","getItem","token","isAuth","userSlice","name","reducers","auth","state","action","user","payload","console","log","setItem","signout","removeItem","extraReducers","builder","addCase","fulfilled","stringify","String","rejected","actions","getUser","users","getAuth","getToken","reducer"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit';\nimport { IUser } from '../../types/user';\nimport { fetchSignIn, fetchSignUp } from '../asyncActions/userActions';\nimport { RootState } from '../store';\n\ninterface UserState {\n  currentUser: object | null;\n  token: string;\n  isAuth: boolean;\n};\n\nconst initialState = {\n  currentUser: JSON.parse(localStorage.getItem('currentUser') || '{}'),\n  token: localStorage.getItem('token'),\n  isAuth: !!localStorage.getItem('isAuth'),\n} as UserState;\n\nexport const userSlice: Slice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    auth: (state, action: PayloadAction<{ token: string; user: IUser; }>) => {\n      const { token, user } = action.payload;\n      console.log(user);\n      state.currentUser = user;\n      state.isAuth = true;\n      localStorage.setItem('token', token);\n    },\n    signout: (state) => {\n      state.currentUser = {};\n      state.isAuth = false;\n      state.token = '';\n      localStorage.removeItem('currentUser');\n      localStorage.removeItem('token');\n      localStorage.removeItem('isAuth');\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchSignUp.fulfilled, (state, action: PayloadAction<{ token: string; user: IUser; }>) => {\n      const { token, user } = action.payload;\n      state.currentUser = user;\n      state.token = token || '';\n      state.isAuth = true;\n      localStorage.setItem('currentUser', JSON.stringify(state.currentUser));\n      localStorage.setItem('token', state.token);\n      localStorage.setItem('isAuth', String(state.isAuth));\n    });\n    builder.addCase(fetchSignUp.rejected, (state, action) => {\n      state.currentUser = null;\n      state.isAuth = false;\n    });\n\n    builder.addCase(fetchSignIn.fulfilled, (state, action: PayloadAction<{ token: string; user: IUser; }>) => {\n      const { token, user } = action.payload;\n      state.currentUser = user;\n      state.token = token || '';\n      state.isAuth = true;\n      console.log(state.currentUser)\n      localStorage.setItem('currentUser', JSON.stringify(state.currentUser));\n      localStorage.setItem('token', state.token);\n      localStorage.setItem('isAuth', String(state.isAuth));\n    });\n    builder.addCase(fetchSignIn.rejected, (state, action) => {\n      state.currentUser = null;\n      state.isAuth = false;\n    });\n  },\n});\n\nexport const { auth, signout } = userSlice.actions;\n\nexport const getUser = (state: RootState) => state.users.currentUser;\nexport const getAuth = (state: RootState) => state.users.isAuth;\nexport const getToken = (state: RootState) => state.users.token;\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}