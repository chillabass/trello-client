{"ast":null,"code":"import axios from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nconst GENERAL_URL = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/users`; // export const fetchSignUp = createAsyncThunk<IUser>(\n//   'users/fetchSignUp',\n//   async (data, thunkApi) => {\n//     const url: string = `${GENERAL_URL}/signup`;\n//     await axios.post<IUser>(url, data, { \n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Access-Control-Allow-Origin\": url,\n//       },\n//     }); \n//   }\n// );\n\nexport const fetchSignUp = createAsyncThunk('users/fetchSignUp', async data => {\n  try {\n    const url = `${GENERAL_URL}/signup`;\n    const response = await axios.post(url, data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": url\n      }\n    });\n    return response.data;\n  } catch (e) {\n    var _e$response;\n\n    alert((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data);\n    return e;\n  }\n}); // export const fetchSignUp = (data: object) => {\n//   return (dispatch: Dispatch): void => {\n//     const url: string = `${GENERAL_URL}/signup`;\n//     axios.post(url, data, { \n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Access-Control-Allow-Origin\": url,\n//       },\n//     }).then(response => {\n//         dispatch(auth(response.data));\n//     }).catch((e: AxiosError )=> {\n//       alert(e.response?.data);\n//     });\n//   }\n// };\n// export const fetchSignIn = (data: object) => {\n//   return (dispatch: Dispatch): void => {\n//     const url: string = `${GENERAL_URL}/signin`;\n//     axios.post(url, data, {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Access-Control-Allow-Origin\": url,\n//       },\n//     }).then(response => {\n//       dispatch(auth(response.data));\n//     }).catch((e: AxiosError )=> {\n//       alert(e.response?.data);\n//     });\n//   }\n// };","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/store/asyncActions/userActions.ts"],"names":["axios","PROTOCOL","SERVER_HOST","SERVER_PORT","createAsyncThunk","GENERAL_URL","fetchSignUp","data","url","response","post","headers","e","alert"],"mappings":"AACA,OAAOA,KAAP,MAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,cAAnD;AACA,SAASC,gBAAT,QAA2C,kBAA3C;AAGA,MAAMC,WAAW,GAAI,GAAEJ,QAAS,MAAKC,WAAY,IAAGC,WAAY,QAAhE,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,WAAW,GAAGF,gBAAgB,CACzC,mBADyC,EAEzC,MAAOG,IAAP,IAAwB;AACtB,MAAI;AACF,UAAMC,GAAW,GAAI,GAAEH,WAAY,SAAnC;AACA,UAAMI,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAkBF,GAAlB,EAAuBD,IAAvB,EAA6B;AAClDI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,uCAA+BH;AAFxB;AADyC,KAA7B,CAAvB;AAMA,WAAOC,QAAQ,CAACF,IAAhB;AACD,GATD,CASE,OAAOK,CAAP,EAA4B;AAAA;;AAC5BC,IAAAA,KAAK,gBAACD,CAAC,CAACH,QAAH,gDAAC,YAAYF,IAAb,CAAL;AACA,WAAOK,CAAP;AACD;AAEF,CAjBwC,CAApC,C,CAoBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { auth } from '../reducers/userReduser';\nimport axios, { AxiosError } from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\nimport { createAsyncThunk, Dispatch } from '@reduxjs/toolkit';\nimport { IUser } from '../../types/user';\n\nconst GENERAL_URL = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/users`;\n\n// export const fetchSignUp = createAsyncThunk<IUser>(\n//   'users/fetchSignUp',\n//   async (data, thunkApi) => {\n//     const url: string = `${GENERAL_URL}/signup`;\n//     await axios.post<IUser>(url, data, { \n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Access-Control-Allow-Origin\": url,\n//       },\n//     }); \n//   }\n// );\n\nexport const fetchSignUp = createAsyncThunk<IUser, object>(\n  'users/fetchSignUp',\n  async (data: object) => {\n    try {\n      const url: string = `${GENERAL_URL}/signup`;\n      const response = await axios.post<IUser>(url, data, { \n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": url,\n        },\n      });\n      return response.data;\n    } catch (e: AxiosError | any) {\n      alert(e.response?.data);\n      return e;\n    }\n    \n  }\n);\n\n// export const fetchSignUp = (data: object) => {\n//   return (dispatch: Dispatch): void => {\n//     const url: string = `${GENERAL_URL}/signup`;\n//     axios.post(url, data, { \n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Access-Control-Allow-Origin\": url,\n//       },\n//     }).then(response => {\n//         dispatch(auth(response.data));\n//     }).catch((e: AxiosError )=> {\n//       alert(e.response?.data);\n//     });\n//   }\n// };\n\n// export const fetchSignIn = (data: object) => {\n//   return (dispatch: Dispatch): void => {\n//     const url: string = `${GENERAL_URL}/signin`;\n//     axios.post(url, data, {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Access-Control-Allow-Origin\": url,\n//       },\n//     }).then(response => {\n//       dispatch(auth(response.data));\n//     }).catch((e: AxiosError )=> {\n//       alert(e.response?.data);\n//     });\n//   }\n// };\n\n\n"]},"metadata":{},"sourceType":"module"}