{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\nexport const userSlice = createSlice({\n  name: 'users',\n  initialState: {\n    currentUser: {}\n  },\n  reducers: {\n    signup: (state, action) => {\n      const url = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/users/signup`;\n      axios.post(url, action.payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": url\n        }\n      }).then(response => {\n        const {\n          token,\n          createdUser\n        } = response.data;\n        console.log(response);\n        localStorage.setItem('token', token);\n        state.currentUser = createdUser;\n      });\n    },\n    signin: (state, action) => {\n      axios.post(`${PROTOCOL}//${SERVER_HOST}:${SERVER_PORT}/users/signin`, action.payload).then(response => {\n        console.log(response);\n      });\n    },\n    signout: () => {\n      localStorage.removeItem('token');\n    }\n  }\n});\nexport const {\n  signup,\n  signin\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/store/reducers/userReduser.ts"],"names":["createSlice","axios","PROTOCOL","SERVER_HOST","SERVER_PORT","userSlice","name","initialState","currentUser","reducers","signup","state","action","url","post","payload","headers","then","response","token","createdUser","data","console","log","localStorage","setItem","signin","signout","removeItem","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,cAAnD;AAEA,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;AACnCM,EAAAA,IAAI,EAAE,OAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD,GAFqB;AAKnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzB,YAAMC,GAAG,GAAI,GAAEX,QAAS,MAAKC,WAAY,IAAGC,WAAY,eAAxD;AACAH,MAAAA,KAAK,CAACa,IAAN,CAAWD,GAAX,EAAgBD,MAAM,CAACG,OAAvB,EAAgC;AAC9BC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,yCAA+BH;AAFxB;AADqB,OAAhC,EAKGI,IALH,CAKQC,QAAQ,IAAI;AAClB,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAyBF,QAAQ,CAACG,IAAxC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAM,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,KAA9B;AACAR,QAAAA,KAAK,CAACH,WAAN,GAAoBY,WAApB;AACD,OAVD;AAWD,KAdO;AAeRM,IAAAA,MAAM,EAAE,CAACf,KAAD,EAAQC,MAAR,KAAmB;AACzBX,MAAAA,KAAK,CAACa,IAAN,CAAY,GAAEZ,QAAS,KAAIC,WAAY,IAAGC,WAAY,eAAtD,EAAsEQ,MAAM,CAACG,OAA7E,EAAsFE,IAAtF,CAA2FC,QAAQ,IAAI;AACrGI,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,OAFD;AAGD,KAnBO;AAoBRS,IAAAA,OAAO,EAAE,MAAM;AACbH,MAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACD;AAtBO;AALyB,CAAD,CAA7B;AA+BP,OAAO,MAAM;AAAElB,EAAAA,MAAF;AAAUgB,EAAAA;AAAV,IAAqBrB,SAAS,CAACwB,OAArC;AAEP,eAAexB,SAAS,CAACyB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\n\nexport const userSlice = createSlice({\n  name: 'users',\n  initialState: {\n    currentUser: {},\n  },\n  reducers: {\n    signup: (state, action) => {\n      const url = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/users/signup`;\n      axios.post(url, action.payload, { \n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": url,\n        },\n      }).then(response => {\n        const { token, createdUser } = response.data;\n        console.log(response);\n        localStorage.setItem('token', token);\n        state.currentUser = createdUser;\n      });\n    },\n    signin: (state, action) => {\n      axios.post(`${PROTOCOL}//${SERVER_HOST}:${SERVER_PORT}/users/signin`, action.payload).then(response => {\n        console.log(response);\n      });\n    },\n    signout: () => {\n      localStorage.removeItem('token');\n    }\n  },\n});\n\nexport const { signup, signin } = userSlice.actions;\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}