{"ast":null,"code":"import { auth } from '../reducers/userReduser';\nimport axios from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\nconst GENERAL_URL = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/users`;\nexport const fetchSignUp = data => {\n  return dispatch => {\n    const url = `${GENERAL_URL}/signup`;\n    axios.post(url, data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": url\n      }\n    }).then(response => {\n      console.log(response.status);\n\n      if (response.status === 200) {\n        dispatch(auth(response.data));\n      } else {\n        console.log(response);\n      }\n    });\n  };\n};\nexport const fetchSignIn = data => {\n  return dispatch => {\n    const url = `${GENERAL_URL}/signin`;\n    axios.post(url, data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": url\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        dispatch(auth(response.data));\n      } else {\n        console.log(response);\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/store/asyncActions/userActions.ts"],"names":["auth","axios","PROTOCOL","SERVER_HOST","SERVER_PORT","GENERAL_URL","fetchSignUp","data","dispatch","url","post","headers","then","response","console","log","status","fetchSignIn"],"mappings":"AAAA,SAASA,IAAT,QAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,cAAnD;AAGA,MAAMC,WAAW,GAAI,GAAEH,QAAS,MAAKC,WAAY,IAAGC,WAAY,QAAhE;AAEA,OAAO,MAAME,WAAW,GAAIC,IAAD,IAAkB;AAC3C,SAAQC,QAAD,IAA8B;AACnC,UAAMC,GAAW,GAAI,GAAEJ,WAAY,SAAnC;AACAJ,IAAAA,KAAK,CAACS,IAAN,CAAWD,GAAX,EAAgBF,IAAhB,EAAsB;AACpBI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,uCAA+BF;AAFxB;AADW,KAAtB,EAKGG,IALH,CAKQC,QAAQ,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAArB;;AACA,UAAIH,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BR,QAAAA,QAAQ,CAACR,IAAI,CAACa,QAAQ,CAACN,IAAV,CAAL,CAAR;AACD,OAFD,MAEO;AACLO,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD;AACF,KAZD;AAaD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMI,WAAW,GAAIV,IAAD,IAAkB;AAC3C,SAAQC,QAAD,IAA8B;AACnC,UAAMC,GAAW,GAAI,GAAEJ,WAAY,SAAnC;AACAJ,IAAAA,KAAK,CAACS,IAAN,CAAWD,GAAX,EAAgBF,IAAhB,EAAsB;AACpBI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,uCAA+BF;AAFxB;AADW,KAAtB,EAKGG,IALH,CAKQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BR,QAAAA,QAAQ,CAACR,IAAI,CAACa,QAAQ,CAACN,IAAV,CAAL,CAAR;AACD,OAFD,MAEO;AACLO,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD;AACJ,KAXD;AAYD,GAdD;AAeD,CAhBM","sourcesContent":["import { auth } from '../reducers/userReduser';\nimport axios from 'axios';\nimport { PROTOCOL, SERVER_HOST, SERVER_PORT } from '../../config';\nimport { Dispatch } from '@reduxjs/toolkit';\n\nconst GENERAL_URL = `${PROTOCOL}://${SERVER_HOST}:${SERVER_PORT}/users`;\n\nexport const fetchSignUp = (data: object) => {\n  return (dispatch: Dispatch): void => {\n    const url: string = `${GENERAL_URL}/signup`;\n    axios.post(url, data, { \n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": url,\n      },\n    }).then(response => {\n      console.log(response.status)\n      if (response.status === 200) {\n        dispatch(auth(response.data));\n      } else {\n        console.log(response)\n      }\n    });\n  }\n};\n\nexport const fetchSignIn = (data: object) => {\n  return (dispatch: Dispatch): void => {\n    const url: string = `${GENERAL_URL}/signin`;\n    axios.post(url, data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": url,\n      },\n    }).then(response => {\n        if (response.status === 200) {\n          dispatch(auth(response.data));\n        } else {\n          console.log(response)\n        }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}