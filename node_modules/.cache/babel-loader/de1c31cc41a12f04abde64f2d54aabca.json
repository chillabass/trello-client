{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchSignIn, fetchSignUp } from '../asyncActions/userActions';\nexport const userSlice = createSlice({\n  name: 'users',\n  initialState: {\n    currentUser: JSON.parse(localStorage.getItem('currentUser') || '{}'),\n    token: localStorage.getItem('token'),\n    isAuth: !!localStorage.getItem('isAuth')\n  },\n  reducers: {\n    auth: (state, action) => {\n      const {\n        token,\n        user\n      } = action.payload;\n      console.log(user);\n      state.currentUser = user;\n      state.isAuth = true;\n      localStorage.setItem('token', token);\n    },\n    signout: state => {\n      state.currentUser = {};\n      state.isAuth = false;\n      localStorage.removeItem('currentUser');\n      localStorage.removeItem('token');\n      localStorage.removeItem('isAuth');\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchSignUp.fulfilled, (state, action) => {\n      state.currentUser = action.payload;\n      state.token = action.payload.token || '';\n      state.isAuth = true;\n      localStorage.setItem('currentUser', JSON.stringify(state.currentUser));\n      localStorage.setItem('token', state.token);\n      localStorage.setItem('isAuth', String(state.isAuth));\n    });\n    builder.addCase(fetchSignUp.rejected, (state, action) => {\n      state.currentUser = {};\n      state.isAuth = false;\n    });\n    builder.addCase(fetchSignIn.fulfilled, (state, action) => {\n      state.currentUser = action.payload.user;\n      state.token = action.payload.token || '';\n      state.isAuth = true;\n      localStorage.setItem('currentUser', JSON.stringify(state.currentUser));\n      localStorage.setItem('token', state.token);\n      localStorage.setItem('isAuth', String(state.isAuth));\n    });\n    builder.addCase(fetchSignIn.rejected, (state, action) => {\n      state.currentUser = {};\n      state.isAuth = false;\n    });\n  }\n});\nexport const {\n  auth,\n  signout\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/home/chillbruh/Documents/Fusion_Tech_internship/trello/client/src/store/reducers/userReduser.ts"],"names":["createSlice","fetchSignIn","fetchSignUp","userSlice","name","initialState","currentUser","JSON","parse","localStorage","getItem","token","isAuth","reducers","auth","state","action","user","payload","console","log","setItem","signout","removeItem","extraReducers","builder","addCase","fulfilled","stringify","String","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import { Action, createSlice, Slice } from '@reduxjs/toolkit';\nimport { IUser } from '../../types/user';\nimport { fetchSignIn, fetchSignUp } from '../asyncActions/userActions';\n\nexport const userSlice: Slice = createSlice({\n  name: 'users',\n  initialState: {\n    currentUser: JSON.parse(localStorage.getItem('currentUser') || '{}'),\n    token: localStorage.getItem('token'),\n    isAuth: !!localStorage.getItem('isAuth'),\n  },\n  reducers: {\n    auth: (state, action) => {\n      const { token, user }: {token: string, user: object} = action.payload;\n      console.log(user);\n      state.currentUser = user;\n      state.isAuth = true;\n      localStorage.setItem('token', token);\n    },\n    signout: (state) => {\n      state.currentUser = {};\n      state.isAuth = false;\n      localStorage.removeItem('currentUser');\n      localStorage.removeItem('token');\n      localStorage.removeItem('isAuth');\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchSignUp.fulfilled, (state, action) => {\n      state.currentUser = action.payload;\n      state.token = action.payload.token || '';\n      state.isAuth = true;\n      localStorage.setItem('currentUser', JSON.stringify(state.currentUser));\n      localStorage.setItem('token', state.token);\n      localStorage.setItem('isAuth', String(state.isAuth));\n    });\n    builder.addCase(fetchSignUp.rejected, (state, action) => {\n      state.currentUser = {};\n      state.isAuth = false;\n    });\n\n    builder.addCase(fetchSignIn.fulfilled, (state, action) => {\n      state.currentUser = action.payload.user;\n      state.token = action.payload.token || '';\n      state.isAuth = true;\n      localStorage.setItem('currentUser', JSON.stringify(state.currentUser));\n      localStorage.setItem('token', state.token);\n      localStorage.setItem('isAuth', String(state.isAuth));\n    });\n    builder.addCase(fetchSignIn.rejected, (state, action) => {\n      state.currentUser = {};\n      state.isAuth = false;\n    });\n  },\n});\n\nexport const { auth, signout } = userSlice.actions;\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}